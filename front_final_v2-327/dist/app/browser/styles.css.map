{
  "version": 3,
  "sources": ["node_modules/sweetalert2/dist/sweetalert2.min.css", "node_modules/@ionic/angular/src/css/core.scss", "node_modules/@ionic/angular/src/components/modal/modal.vars.scss", "node_modules/@ionic/angular/src/themes/ionic.mixins.scss", "node_modules/@ionic/angular/src/themes/ionic.globals.scss", "node_modules/@ionic/angular/src/components/menu/menu.ios.vars.scss", "node_modules/@ionic/angular/src/components/menu/menu.md.vars.scss", "node_modules/@ionic/angular/src/css/normalize.scss", "node_modules/@ionic/angular/src/css/structure.scss", "node_modules/@ionic/angular/src/themes/ionic.mixins.scss", "node_modules/@ionic/angular/src/css/typography.scss", "node_modules/@ionic/angular/src/themes/ionic.mixins.scss", "node_modules/@ionic/angular/src/css/display.scss", "node_modules/@ionic/angular/src/themes/ionic.mixins.scss", "node_modules/@ionic/angular/src/css/padding.scss", "node_modules/@ionic/angular/src/themes/ionic.mixins.scss", "node_modules/@ionic/angular/src/css/float-elements.scss", "node_modules/@ionic/angular/src/themes/ionic.mixins.scss", "node_modules/@ionic/angular/src/css/text-alignment.scss", "node_modules/@ionic/angular/src/themes/ionic.mixins.scss", "node_modules/@ionic/angular/src/css/text-transformation.scss", "node_modules/@ionic/angular/src/themes/ionic.mixins.scss", "node_modules/@ionic/angular/src/css/flex-utils.scss", "node_modules/@ionic/angular/src/css/palettes/dark.system.scss", "node_modules/@ionic/angular/src/css/palettes/dark.scss", "src/theme/variables.css"],
  "sourcesContent": [":root{--swal2-outline: 0 0 0 3px rgba(100, 150, 200, 0.5);--swal2-container-padding: 0.625em;--swal2-backdrop: rgba(0, 0, 0, 0.4);--swal2-backdrop-transition: background-color 0.1s;--swal2-width: 32em;--swal2-padding: 0 0 1.25em;--swal2-border: none;--swal2-border-radius: 0.3125rem;--swal2-background: white;--swal2-color: #545454;--swal2-footer-border-color: #eee;--swal2-show-animation: swal2-show 0.3s;--swal2-hide-animation: swal2-hide 0.15s forwards;--swal2-icon-zoom: 1;--swal2-icon-animations: true;--swal2-title-padding: 0.8em 1em 0;--swal2-html-container-padding: 1em 1.6em 0.3em;--swal2-input-border-radius: 0.1875em;--swal2-input-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.06), 0 0 0 3px transparent;--swal2-input-background: transparent;--swal2-input-transition: border-color 0.2s, box-shadow 0.2s;--swal2-progress-step-background: #add8e6;--swal2-validation-message-background: #f0f0f0;--swal2-validation-message-color: #666;--swal2-close-button-position: initial;--swal2-close-button-inset: auto;--swal2-close-button-font-size: 2.5em;--swal2-close-button-color: #ccc;--swal2-close-button-transition: color 0.2s, box-shadow 0.2s;--swal2-close-button-outline: initial;--swal2-close-button-box-shadow: inset 0 0 0 3px transparent;--swal2-close-button-focus-box-shadow: inset var(--swal2-outline);--swal2-close-button-hover-transform: none;--swal2-button-transition: background-color 0.2s, box-shadow 0.2s;--swal2-confirm-button-border: 0;--swal2-confirm-button-border-radius: 0.25em;--swal2-confirm-button-background-color: #7066e0;--swal2-confirm-button-color: #fff;--swal2-deny-button-border: 0;--swal2-deny-button-border-radius: 0.25em;--swal2-deny-button-background-color: #dc3741;--swal2-deny-button-color: #fff;--swal2-cancel-button-border: 0;--swal2-cancel-button-border-radius: 0.25em;--swal2-cancel-button-background-color: #6e7881;--swal2-cancel-button-color: #fff;--swal2-toast-show-animation: swal2-toast-show 0.5s;--swal2-toast-hide-animation: swal2-toast-hide 0.1s forwards;--swal2-toast-border: none;--swal2-toast-box-shadow: 0 0 1px hsl(0deg 0% 0% / 0.075), 0 1px 2px hsl(0deg 0% 0% / 0.075), 1px 2px 4px hsl(0deg 0% 0% / 0.075), 1px 3px 8px hsl(0deg 0% 0% / 0.075), 2px 4px 16px hsl(0deg 0% 0% / 0.075)}[data-swal2-theme=dark]{--swal2-dark-theme-black: #19191a;--swal2-dark-theme-white: #e1e1e1;--swal2-background: var(--swal2-dark-theme-black);--swal2-color: var(--swal2-dark-theme-white);--swal2-footer-border-color: #555;--swal2-input-background: color-mix(in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10%);--swal2-validation-message-background: color-mix( in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10% );--swal2-validation-message-color: var(--swal2-dark-theme-white)}@media(prefers-color-scheme: dark){[data-swal2-theme=auto]{--swal2-dark-theme-black: #19191a;--swal2-dark-theme-white: #e1e1e1;--swal2-background: var(--swal2-dark-theme-black);--swal2-color: var(--swal2-dark-theme-white);--swal2-footer-border-color: #555;--swal2-input-background: color-mix(in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10%);--swal2-validation-message-background: color-mix( in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10% );--swal2-validation-message-color: var(--swal2-dark-theme-white)}}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px var(--swal2-backdrop)}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{inset:0 auto auto 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{inset:0 0 auto auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{inset:0 auto auto 0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{inset:50% auto auto 0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{inset:50% auto auto 50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{inset:50% 0 auto auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{inset:auto auto 0 0}body.swal2-toast-shown .swal2-container.swal2-bottom{inset:auto auto 0 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{inset:auto 0 0 auto}@media print{body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown) .swal2-container{position:static !important}}div:where(.swal2-container){display:grid;position:fixed;z-index:1060;inset:0;box-sizing:border-box;grid-template-areas:\"top-start     top            top-end\" \"center-start  center         center-end\" \"bottom-start  bottom-center  bottom-end\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:var(--swal2-container-padding);overflow-x:hidden;transition:var(--swal2-backdrop-transition);-webkit-overflow-scrolling:touch}div:where(.swal2-container).swal2-backdrop-show,div:where(.swal2-container).swal2-noanimation{background:var(--swal2-backdrop)}div:where(.swal2-container).swal2-backdrop-hide{background:rgba(0,0,0,0) !important}div:where(.swal2-container).swal2-top-start,div:where(.swal2-container).swal2-center-start,div:where(.swal2-container).swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}div:where(.swal2-container).swal2-top,div:where(.swal2-container).swal2-center,div:where(.swal2-container).swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}div:where(.swal2-container).swal2-top-end,div:where(.swal2-container).swal2-center-end,div:where(.swal2-container).swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}div:where(.swal2-container).swal2-top-start>.swal2-popup{align-self:start}div:where(.swal2-container).swal2-top>.swal2-popup{grid-column:2;place-self:start center}div:where(.swal2-container).swal2-top-end>.swal2-popup,div:where(.swal2-container).swal2-top-right>.swal2-popup{grid-column:3;place-self:start end}div:where(.swal2-container).swal2-center-start>.swal2-popup,div:where(.swal2-container).swal2-center-left>.swal2-popup{grid-row:2;align-self:center}div:where(.swal2-container).swal2-center>.swal2-popup{grid-column:2;grid-row:2;place-self:center center}div:where(.swal2-container).swal2-center-end>.swal2-popup,div:where(.swal2-container).swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;place-self:center end}div:where(.swal2-container).swal2-bottom-start>.swal2-popup,div:where(.swal2-container).swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}div:where(.swal2-container).swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;place-self:end center}div:where(.swal2-container).swal2-bottom-end>.swal2-popup,div:where(.swal2-container).swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;place-self:end end}div:where(.swal2-container).swal2-grow-row>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}div:where(.swal2-container).swal2-grow-column>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}div:where(.swal2-container).swal2-no-transition{transition:none !important}div:where(.swal2-container)[popover]{width:auto;border:0}div:where(.swal2-container) div:where(.swal2-popup){display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:var(--swal2-width);max-width:100%;padding:var(--swal2-padding);border:var(--swal2-border);border-radius:var(--swal2-border-radius);background:var(--swal2-background);color:var(--swal2-color);font-family:inherit;font-size:1rem;container-name:swal2-popup}div:where(.swal2-container) div:where(.swal2-popup):focus{outline:none}div:where(.swal2-container) div:where(.swal2-popup).swal2-loading{overflow-y:hidden}div:where(.swal2-container) div:where(.swal2-popup).swal2-draggable{cursor:grab}div:where(.swal2-container) div:where(.swal2-popup).swal2-draggable div:where(.swal2-icon){cursor:grab}div:where(.swal2-container) div:where(.swal2-popup).swal2-dragging{cursor:grabbing}div:where(.swal2-container) div:where(.swal2-popup).swal2-dragging div:where(.swal2-icon){cursor:grabbing}div:where(.swal2-container) h2:where(.swal2-title){position:relative;max-width:100%;margin:0;padding:var(--swal2-title-padding);color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word;cursor:initial}div:where(.swal2-container) div:where(.swal2-actions){display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}div:where(.swal2-container) div:where(.swal2-loader){display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}div:where(.swal2-container) button:where(.swal2-styled){margin:.3125em;padding:.625em 1.1em;transition:var(--swal2-button-transition);box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}div:where(.swal2-container) button:where(.swal2-styled):not([disabled]){cursor:pointer}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm){border:var(--swal2-confirm-button-border);border-radius:var(--swal2-confirm-button-border-radius);background:initial;background-color:var(--swal2-confirm-button-background-color);color:var(--swal2-confirm-button-color);font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm):hover{background-color:color-mix(in srgb, var(--swal2-confirm-button-background-color), black 10%)}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm):active{background-color:color-mix(in srgb, var(--swal2-confirm-button-background-color), black 20%)}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny){border:var(--swal2-deny-button-border);border-radius:var(--swal2-deny-button-border-radius);background:initial;background-color:var(--swal2-deny-button-background-color);color:var(--swal2-deny-button-color);font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny):hover{background-color:color-mix(in srgb, var(--swal2-deny-button-background-color), black 10%)}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny):active{background-color:color-mix(in srgb, var(--swal2-deny-button-background-color), black 20%)}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel){border:var(--swal2-cancel-button-border);border-radius:var(--swal2-cancel-button-border-radius);background:initial;background-color:var(--swal2-cancel-button-background-color);color:var(--swal2-cancel-button-color);font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel):hover{background-color:color-mix(in srgb, var(--swal2-cancel-button-background-color), black 10%)}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel):active{background-color:color-mix(in srgb, var(--swal2-cancel-button-background-color), black 20%)}div:where(.swal2-container) button:where(.swal2-styled):focus-visible{outline:none;box-shadow:var(--swal2-action-button-outline)}div:where(.swal2-container) button:where(.swal2-styled)[disabled]:not(.swal2-loading){opacity:.4}div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-footer){margin:1em 0 0;padding:1em 1em 0;border-top:1px solid var(--swal2-footer-border-color);color:inherit;font-size:1em;text-align:center;cursor:initial}div:where(.swal2-container) .swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:var(--swal2-border-radius);border-bottom-left-radius:var(--swal2-border-radius)}div:where(.swal2-container) div:where(.swal2-timer-progress-bar){width:100%;height:.25em;background:rgba(0,0,0,.2)}div:where(.swal2-container) img:where(.swal2-image){max-width:100%;margin:2em auto 1em;cursor:initial}div:where(.swal2-container) button:where(.swal2-close){position:var(--swal2-close-button-position);inset:var(--swal2-close-button-inset);z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:var(--swal2-close-button-transition);border:none;border-radius:var(--swal2-border-radius);outline:var(--swal2-close-button-outline);background:rgba(0,0,0,0);color:var(--swal2-close-button-color);font-family:monospace;font-size:var(--swal2-close-button-font-size);cursor:pointer;justify-self:end}div:where(.swal2-container) button:where(.swal2-close):hover{transform:var(--swal2-close-button-hover-transform);background:rgba(0,0,0,0);color:#f27474}div:where(.swal2-container) button:where(.swal2-close):focus-visible{outline:none;box-shadow:var(--swal2-close-button-focus-box-shadow)}div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-html-container){z-index:1;justify-content:center;margin:0;padding:var(--swal2-html-container-padding);overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word;cursor:initial}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea),div:where(.swal2-container) select:where(.swal2-select),div:where(.swal2-container) div:where(.swal2-radio),div:where(.swal2-container) label:where(.swal2-checkbox){margin:1em 2em 3px}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea){box-sizing:border-box;width:auto;transition:var(--swal2-input-transition);border:1px solid #d9d9d9;border-radius:var(--swal2-input-border-radius);background:var(--swal2-input-background);box-shadow:var(--swal2-input-box-shadow);color:inherit;font-size:1.125em}div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}div:where(.swal2-container) input:where(.swal2-input):focus,div:where(.swal2-container) input:where(.swal2-file):focus,div:where(.swal2-container) textarea:where(.swal2-textarea):focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) input:where(.swal2-input)::placeholder,div:where(.swal2-container) input:where(.swal2-file)::placeholder,div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder{color:#ccc}div:where(.swal2-container) .swal2-range{margin:1em 2em 3px;background:var(--swal2-background)}div:where(.swal2-container) .swal2-range input{width:80%}div:where(.swal2-container) .swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}div:where(.swal2-container) .swal2-range input,div:where(.swal2-container) .swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}div:where(.swal2-container) .swal2-input{height:2.625em;padding:0 .75em}div:where(.swal2-container) .swal2-file{width:75%;margin-right:auto;margin-left:auto;background:var(--swal2-input-background);font-size:1.125em}div:where(.swal2-container) .swal2-textarea{height:6.75em;padding:.75em}div:where(.swal2-container) .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:var(--swal2-input-background);color:inherit;font-size:1.125em}div:where(.swal2-container) .swal2-radio,div:where(.swal2-container) .swal2-checkbox{align-items:center;justify-content:center;background:var(--swal2-background);color:inherit}div:where(.swal2-container) .swal2-radio label,div:where(.swal2-container) .swal2-checkbox label{margin:0 .6em;font-size:1.125em}div:where(.swal2-container) .swal2-radio input,div:where(.swal2-container) .swal2-checkbox input{flex-shrink:0;margin:0 .4em}div:where(.swal2-container) label:where(.swal2-input-label){display:flex;justify-content:center;margin:1em auto 0}div:where(.swal2-container) div:where(.swal2-validation-message){align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:var(--swal2-validation-message-background);color:var(--swal2-validation-message-color);font-size:1em;font-weight:300}div:where(.swal2-container) div:where(.swal2-validation-message)::before{content:\"!\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}div:where(.swal2-container) .swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}div:where(.swal2-container) .swal2-progress-steps li{display:inline-block;position:relative}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:var(--swal2-progress-step-background);color:#fff}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:var(--swal2-progress-step-background)}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}div:where(.swal2-icon){position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;zoom:var(--swal2-icon-zoom);border:.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}div:where(.swal2-icon) .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}div:where(.swal2-icon).swal2-error{border-color:#f27474;color:#f27474}div:where(.swal2-icon).swal2-error .swal2-x-mark{position:relative;flex-grow:1}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}}div:where(.swal2-icon).swal2-warning{border-color:#f8bb86;color:#f8bb86}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}}div:where(.swal2-icon).swal2-info{border-color:#3fc3ee;color:#3fc3ee}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}}div:where(.swal2-icon).swal2-question{border-color:#87adbd;color:#87adbd}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}}div:where(.swal2-icon).swal2-success{border-color:#a5dc86;color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;border-radius:50%}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}div:where(.swal2-icon).swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}div:where(.swal2-icon).swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:var(--swal2-show-animation)}.swal2-hide{animation:var(--swal2-hide-animation)}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;border:var(--swal2-toast-border);background:var(--swal2-background);box-shadow:var(--swal2-toast-box-shadow);pointer-events:all}.swal2-toast>*{grid-column:2}.swal2-toast h2:where(.swal2-title){margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-toast .swal2-loading{justify-content:center}.swal2-toast input:where(.swal2-input){height:2em;margin:.5em;font-size:1em}.swal2-toast .swal2-validation-message{font-size:1em}.swal2-toast div:where(.swal2-footer){margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-toast button:where(.swal2-close){grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-toast div:where(.swal2-html-container){margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-toast div:where(.swal2-html-container):empty{padding:0}.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-toast div:where(.swal2-actions){justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-toast button:where(.swal2-styled){margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;border-radius:50%}.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}@container swal2-popup style(--swal2-icon-animations:true){.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}}.swal2-toast.swal2-show{animation:var(--swal2-toast-show-animation)}.swal2-toast.swal2-hide{animation:var(--swal2-toast-hide-animation)}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}\n", "@use \"sass:map\";\n@import \"../themes/ionic.globals\";\n@import \"../components/menu/menu.ios.vars\";\n@import \"../components/menu/menu.md.vars\";\n@import \"../components/modal/modal.vars\";\n\n:root {\n  /**\n   * Loop through each color object from the\n   * `ionic.theme.default.scss` file\n   * and generate CSS Variables for each color.\n   */\n  @each $color-name, $value in $colors {\n    --ion-color-#{$color-name}: #{map.get($value, base)};\n    --ion-color-#{$color-name}-rgb: #{color-to-rgb-list(map.get($value, base))};\n    --ion-color-#{$color-name}-contrast: #{map.get($value, contrast)};\n    --ion-color-#{$color-name}-contrast-rgb: #{color-to-rgb-list(map.get($value, contrast))};\n    --ion-color-#{$color-name}-shade: #{map.get($value, shade)};\n    --ion-color-#{$color-name}-tint: #{map.get($value, tint)};\n  }\n}\n\n// Ionic Font Family\n// --------------------------------------------------\n\nhtml.ios {\n  --ion-default-font: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", \"Roboto\", sans-serif;\n}\nhtml.md {\n  --ion-default-font: \"Roboto\", \"Helvetica Neue\", sans-serif;\n}\n\nhtml {\n  --ion-dynamic-font: -apple-system-body;\n  --ion-font-family: var(--ion-default-font);\n}\n\nbody {\n  background: var(--ion-background-color);\n  color: var(--ion-text-color);\n}\n\nbody.backdrop-no-scroll {\n  overflow: hidden;\n}\n\n// Modal - Card Style\n// --------------------------------------------------\n/**\n * Card style modal needs additional padding on the\n * top of the header. We accomplish this by targeting\n * the first toolbar in the header.\n * Footer also needs this. We do not adjust the bottom\n * padding though because of the safe area.\n */\nhtml.ios ion-modal.modal-card ion-header ion-toolbar:first-of-type,\nhtml.ios ion-modal.modal-sheet ion-header ion-toolbar:first-of-type,\nhtml.ios ion-modal ion-footer ion-toolbar:first-of-type {\n  padding-top: $modal-sheet-padding-top;\n}\n\n/**\n* Card style modal needs additional padding on the\n* bottom of the header. We accomplish this by targeting\n* the last toolbar in the header.\n*/\nhtml.ios ion-modal.modal-card ion-header ion-toolbar:last-of-type,\nhtml.ios ion-modal.modal-sheet ion-header ion-toolbar:last-of-type {\n  padding-bottom: $modal-sheet-padding-bottom;\n}\n\n/**\n* Add padding on the left and right\n* of toolbars while accounting for\n* safe area values when in landscape.\n*/\nhtml.ios ion-modal ion-toolbar {\n  padding-right: calc(var(--ion-safe-area-right) + 8px);\n  padding-left: calc(var(--ion-safe-area-left) + 8px);\n}\n\n/**\n * Card style modal on iPadOS\n * should only have backdrop on first instance.\n */\n@media screen and (min-width: 768px) {\n  html.ios ion-modal.modal-card:first-of-type {\n    --backdrop-opacity: 0.18;\n  }\n}\n\n/**\n * Subsequent modals should not have a backdrop/box shadow\n * as it will cause the screen to appear to get progressively\n * darker. With Ionic 6, declarative modals made it\n * possible to have multiple non-presented modals in the DOM,\n * so we could no longer rely on ion-modal:first-of-type.\n * Here we disable the opacity/box-shadow for every modal\n * that comes after the first presented modal.\n *\n * Note: ion-modal:not(.overlay-hidden):first-of-type\n * does not match the first modal to not have\n * the .overlay-hidden class, it will match the\n * first modal in general only if it does not\n * have the .overlay-hidden class.\n * The :nth-child() pseudo-class has support\n * for selectors which would help us here. At the\n * time of writing it does not have great cross browser\n * support.\n *\n * Note 2: This should only apply to non-card and\n * non-sheet modals. Card and sheet modals have their\n * own criteria for displaying backdrops/box shadows.\n *\n * Do not use :not(.overlay-hidden) in place of\n * .show-modal because that triggers a memory\n * leak in Blink: https://bugs.chromium.org/p/chromium/issues/detail?id=1418768\n */\nion-modal.modal-default.show-modal ~ ion-modal.modal-default {\n  --backdrop-opacity: 0;\n  --box-shadow: none;\n}\n\n/**\n * This works around a bug in WebKit where the\n * content will overflow outside of the bottom border\n * radius when re-painting. As long as a single\n * border radius value is set on .ion-page, this\n * issue does not happen. We set the top left radius\n * here because the top left corner will always have a\n * radius no matter the platform.\n * This behavior only applies to card modals.\n */\nhtml.ios ion-modal.modal-card .ion-page {\n  border-top-left-radius: var(--border-radius);\n}\n\n// Ionic Colors\n// --------------------------------------------------\n// Generates the color classes and variables based on the\n// colors map\n\n@mixin generate-color($color-name) {\n  $value: map-get($colors, $color-name);\n\n  $base: map-get($value, base);\n  $contrast: map-get($value, contrast);\n  $shade: map-get($value, shade);\n  $tint: map-get($value, tint);\n\n  --ion-color-base: var(--ion-color-#{$color-name}, #{$base}) !important;\n  --ion-color-base-rgb: var(--ion-color-#{$color-name}-rgb, #{color-to-rgb-list($base)}) !important;\n  --ion-color-contrast: var(--ion-color-#{$color-name}-contrast, #{$contrast}) !important;\n  --ion-color-contrast-rgb: var(--ion-color-#{$color-name}-contrast-rgb, #{color-to-rgb-list($contrast)}) !important;\n  --ion-color-shade: var(--ion-color-#{$color-name}-shade, #{$shade}) !important;\n  --ion-color-tint: var(--ion-color-#{$color-name}-tint, #{$tint}) !important;\n}\n\n@each $color-name, $value in $colors {\n  .ion-color-#{$color-name} {\n    @include generate-color($color-name);\n  }\n}\n\n\n// Page Container Structure\n// --------------------------------------------------\n\n.ion-page {\n  @include position(0, 0, 0, 0);\n\n  display: flex;\n  position: absolute;\n\n  flex-direction: column;\n  justify-content: space-between;\n\n  contain: layout size style;\n  z-index: $z-index-page-container;\n}\n\n/**\n * When making custom dialogs, using\n * ion-content is not required. As a result,\n * some developers may wish to have dialogs\n * that are automatically sized by the browser.\n * These changes allow certain dimension values\n * such as fit-content to work correctly.\n */\nion-modal > .ion-page {\n  position: relative;\n\n  contain: layout style;\n\n  height: 100%;\n}\n\n.split-pane-visible > .ion-page.split-pane-main {\n  position: relative;\n}\n\nion-route,\nion-route-redirect,\nion-router,\nion-select-option,\nion-nav-controller,\nion-menu-controller,\nion-action-sheet-controller,\nion-alert-controller,\nion-loading-controller,\nion-modal-controller,\nion-picker-controller,\nion-popover-controller,\nion-toast-controller,\n.ion-page-hidden {\n  /* stylelint-disable-next-line declaration-no-important */\n  display: none !important;\n}\n\n.ion-page-invisible {\n  opacity: 0;\n}\n\n.can-go-back > ion-header ion-back-button {\n  display: block;\n}\n\n\n// Ionic Safe Margins\n// --------------------------------------------------\n\nhtml.plt-ios.plt-hybrid, html.plt-ios.plt-pwa {\n  --ion-statusbar-padding: 20px;\n}\n\n@supports (padding-top: 20px) {\n  html {\n    --ion-safe-area-top: var(--ion-statusbar-padding);\n  }\n}\n\n@supports (padding-top: env(safe-area-inset-top)) {\n  html {\n    --ion-safe-area-top: env(safe-area-inset-top);\n    --ion-safe-area-bottom: env(safe-area-inset-bottom);\n    --ion-safe-area-left: env(safe-area-inset-left);\n    --ion-safe-area-right: env(safe-area-inset-right);\n  }\n}\n\n\n// Global Card Styles\n// --------------------------------------------------\n\nion-card.ion-color .ion-inherit-color,\nion-card-header.ion-color .ion-inherit-color {\n  color: inherit;\n}\n\n\n// Menu Styles\n// --------------------------------------------------\n\n.menu-content {\n  @include transform(translate3d(0, 0, 0));\n}\n\n.menu-content-open {\n  cursor: pointer;\n  touch-action: manipulation;\n\n  /**\n   * The containing element itself should be clickable but\n   * everything inside of it should not clickable when menu is open\n   *\n   * Setting pointer-events after scrolling has already started\n   * will not cancel scrolling which is why we also set\n   * overflow-y below.\n   */\n  pointer-events: none;\n\n  /**\n   * This accounts for scenarios where the main content itself\n   * is scrollable.\n   */\n  overflow-y: hidden;\n}\n\n/**\n * Setting overflow cancels any in-progress scrolling\n * when the menu opens. This prevents users from accidentally\n * scrolling the main content while also dragging the menu open.\n * The code below accounts for both ion-content and then custom\n * scroll containers within ion-content (such as virtual scroll)\n */\n.menu-content-open ion-content {\n  --overflow: hidden;\n}\n\n.menu-content-open .ion-content-scroll-host {\n  overflow: hidden;\n}\n\n.ios .menu-content-reveal {\n  box-shadow: $menu-ios-box-shadow-reveal;\n}\n\n[dir=rtl].ios .menu-content-reveal {\n  box-shadow: $menu-ios-box-shadow-reveal-rtl;\n}\n\n.ios .menu-content-push {\n  box-shadow: $menu-ios-box-shadow-push;\n}\n\n.md .menu-content-reveal {\n  box-shadow: $menu-md-box-shadow;\n}\n\n.md .menu-content-push {\n  box-shadow: $menu-md-box-shadow;\n}\n\n// Accordion Styles\nion-accordion-group.accordion-group-expand-inset > ion-accordion:first-of-type {\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n}\nion-accordion-group.accordion-group-expand-inset > ion-accordion:last-of-type {\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n}\nion-accordion-group > ion-accordion:last-of-type ion-item[slot=\"header\"] {\n  --border-width: 0px;\n}\n\nion-accordion.accordion-animated > [slot=\"header\"] .ion-accordion-toggle-icon {\n  transition: 300ms transform cubic-bezier(0.25, 0.8, 0.5, 1);\n}\n\n@media (prefers-reduced-motion: reduce) {\n  ion-accordion .ion-accordion-toggle-icon {\n    /* stylelint-disable declaration-no-important */\n    transition: none !important;\n  }\n}\n/**\n * The > [slot=\"header\"] selector ensures that we do\n * not modify toggle icons for any nested accordions. The state\n * of one accordion should not affect any accordions inside\n * of a nested accordion group.\n */\nion-accordion.accordion-expanding > [slot=\"header\"] .ion-accordion-toggle-icon,\nion-accordion.accordion-expanded > [slot=\"header\"] .ion-accordion-toggle-icon {\n  transform: rotate(180deg);\n}\n\nion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-previous ion-item[slot=\"header\"] {\n  --border-width: 0px;\n  --inner-border-width: 0px;\n}\n\nion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-expanding:first-of-type,\nion-accordion-group.accordion-group-expand-inset.md > ion-accordion.accordion-expanded:first-of-type {\n  margin-top: 0;\n}\n\n// Safari/iOS 15 changes the appearance of input[type=\"date\"].\n// For backwards compatibility from Ionic 5/Safari 14 designs,\n// we override the appearance only when using within an ion-input.\nion-input input::-webkit-date-and-time-value {\n  text-align: start;\n}\n\n/**\n * The .ion-datetime-button-overlay class contains\n * styles that allow any modal/popover to be\n * sized according to the dimensions of the datetime\n * when used with ion-datetime-button.\n */\n.ion-datetime-button-overlay {\n  --width: fit-content;\n  --height: fit-content;\n}\n\n/**\n * The grid variant can scale down when inline.\n * When used in a `fit-content` overlay, this causes\n * the overlay to shrink when the month/year picker is open.\n * Explicitly setting the dimensions lets us have a consistently\n * sized grid interface.\n */\n.ion-datetime-button-overlay ion-datetime.datetime-grid {\n  width: 320px;\n  min-height: 320px;\n}\n\n/**\n * When moving focus on page transitions we call .focus() on an element which can\n * add an undesired outline ring. This CSS removes the outline ring.\n * We also remove the outline ring from elements that are actively being focused\n * by the focus manager. We are intentionally selective about which elements this\n * applies to so we do not accidentally override outlines set by the developer.\n */\n[ion-last-focus],\nheader[tabindex=\"-1\"]:focus,\n[role=\"banner\"][tabindex=\"-1\"]:focus,\nmain[tabindex=\"-1\"]:focus,\n[role=\"main\"][tabindex=\"-1\"]:focus,\nh1[tabindex=\"-1\"]:focus,\n[role=\"heading\"][aria-level=\"1\"][tabindex=\"-1\"]:focus {\n  outline: none;\n}\n\n/*\n * If a popover has a child ion-content (or class equivalent) then the .popover-viewport element\n * should not be scrollable to ensure the inner content does scroll. However, if the popover\n * does not have a child ion-content (or class equivalent) then the .popover-viewport element\n * should remain scrollable. This code exists globally because popover targets\n * .popover-viewport using ::slotted which only supports simple selectors.\n *\n * Note that we do not need to account for .ion-content-scroll-host here because that\n * class should always be placed within ion-content even if ion-content is not scrollable.\n */\n.popover-viewport:has(> ion-content) {\n  overflow: hidden;\n}\n\n/**\n * :has has cross-browser support, but it is still relatively new. As a result,\n * we should fallback to the old behavior for environments that do not support :has.\n * Developers can explicitly enable this behavior by setting overflow: visible\n * on .popover-viewport if they know they are not going to use an ion-content.\n * TODO FW-6106 Remove this\n */\n@supports not selector(:has(> ion-content)) {\n  .popover-viewport {\n    overflow: hidden;\n  }\n}\n", "@import \"../../themes/ionic.globals\";\n\n// Modals\n// --------------------------------------------------\n\n/// @prop - Min width of the modal inset\n$modal-inset-min-width:         768px;\n\n/// @prop - Minimum height of the small modal inset\n$modal-inset-min-height-small:  600px;\n\n/// @prop - Minimum height of the large modal inset\n$modal-inset-min-height-large:  768px;\n\n/// @prop - Width of the large modal inset\n$modal-inset-width:             600px;\n\n/// @prop - Height of the small modal inset\n$modal-inset-height-small:      500px;\n\n/// @prop - Height of the large modal inset\n$modal-inset-height-large:      600px;\n\n/// @prop - Text color of the modal content\n$modal-text-color:              $text-color;\n\n/// @prop - Padding top of the sheet modal\n$modal-sheet-padding-top:        6px;\n\n/// @prop - Padding bottom of the sheet modal\n$modal-sheet-padding-bottom:     6px;\n", "\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n@mixin tablet-viewport() {\n  @media screen and (min-width: 768px) {\n    @content;\n  }\n}\n\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n@mixin mobile-viewport() {\n  @media screen and (max-width: 767px) {\n    @content;\n  }\n}\n\n@mixin input-cover() {\n  @include position(0, null, null, 0);\n  @include margin(0);\n\n  position: absolute;\n\n  width: 100%;\n  height: 100%;\n\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n\n  appearance: none;\n  outline: none;\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n@mixin visually-hidden() {\n  position: absolute;\n\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  width: 100%;\n  height: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n\n  opacity: 0;\n  overflow: hidden;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n@mixin text-inherit() {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n}\n\n@mixin button-state() {\n  @include position(0, 0, 0, 0);\n\n  position: absolute;\n\n  content: \"\";\n\n  opacity: 0;\n}\n\n// Font smoothing\n// --------------------------------------------------\n\n@mixin font-smoothing() {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n// Get the key from a map based on the index\n@function index-to-key($map, $index) {\n  $keys: map-keys($map);\n\n  @return nth($keys, $index);\n}\n\n\n// Breakpoint Mixins\n// ---------------------------------------------------------------------------------\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$screen-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// ---------------------------------------------------------------------------------\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $screen-breakpoints) {\n  $min: map-get($breakpoints, $name);\n\n  @return if($name != index-to-key($breakpoints, 1), $min, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $screen-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $screen-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $screen-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Maximum breakpoint width. Null for the smallest (first) breakpoint.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n//\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\t// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\t// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $screen-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $screen-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n\n// Text Direction - ltr / rtl\n//\n// CSS defaults to use the ltr css, and adds [dir=rtl] selectors\n// to override ltr defaults.\n// ----------------------------------------------------------\n\n@mixin multi-dir() {\n  @content;\n\n  // $root: #{&};\n  // @at-root [dir] {\n  //   #{$root} {\n  //     @content;\n  //   }\n  // }\n}\n\n@mixin rtl() {\n  $root: #{&};\n\n  $rootSplit: str-split($root, \",\");\n  $selectors: #{add-root-selector($root, \"[dir=rtl]\")};\n  $selectorsSplit: str-split($selectors, \",\");\n\n  $hostContextSelectors: ();\n  $restSelectors: ();\n  $dirSelectors: ();\n\n  // Selectors must be split into individual selectors in case the browser\n  // doesn't support a specific selector.\n  // For example, Firefox and Safari doesn't support `:host-context()`.\n  // If an invalid selector is used, then the entire group of selectors\n  // will be ignored.\n  // @link https://www.w3.org/TR/selectors-3/#grouping\n  @each $selector in $selectorsSplit {\n    // Group the selectors back into a single selector to optimize the output.\n    @if str-index($selector, \":host-context\") {\n      $hostContextSelectors: append($hostContextSelectors, $selector, comma);\n    } @else {\n      // Group the selectors back into a single selector to optimize the output.\n      $restSelectors: append($restSelectors, $selector, comma);\n    }\n  }\n\n  // Supported by Chrome.\n  @if length($hostContextSelectors) > 0 {\n    @at-root #{$hostContextSelectors} {\n      @content;\n    }\n  }\n\n  // Supported by all browsers.\n  @if length($restSelectors) > 0 {\n    @at-root #{$restSelectors} {\n      @content;\n    }\n  }\n\n  // If browser can support `:dir()`, then add the `:dir()` selectors.\n  @supports selector(:dir(rtl)) {\n    // Adding :dir() in case the browser doesn't support `:host-context()` and does support `:dir()`.\n    // `:host-context()` is added:\n    // - through the `add-root-selector()` function.\n    // - first so that it takes precedence over `:dir()`.\n    // For example,\n    // - Firefox doesn't support `:host-context()`, but does support `:dir()`.\n    // - Safari doesn't support `:host-context()`, but Safari 16.4+ supports `:dir()`\n    // @link https://webkit.org/blog/13966/webkit-features-in-safari-16-4/\n    // -- However, there is a Webkit bug on v16 that prevents `:dir()` from working when\n    // -- the app direction is changed dynamically. v17+ works fine.\n    // -- @link https://bugs.webkit.org/show_bug.cgi?id=257133\n\n    // Supported by Firefox.\n    @at-root #{add-root-selector($root, \":dir(rtl)\", false)} {\n      @content;\n    }\n  }\n}\n\n@mixin ltr() {\n  @content;\n}\n\n\n// SVG Background Image Mixin\n// @param {string} $svg\n// ----------------------------------------------------------\n@mixin svg-background-image($svg, $flip-rtl: false) {\n  $url: url-encode($svg);\n  $viewBox: str-split(str-extract($svg, \"viewBox='\", \"'\"), \" \");\n\n  @if $flip-rtl != true or $viewBox == null {\n    @include multi-dir() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n  } @else {\n    $transform: \"transform='translate(#{nth($viewBox, 3)}, 0) scale(-1, 1)'\";\n    $flipped-url: $svg;\n    $flipped-url: str-replace($flipped-url, \"<path\", \"<path #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<line\", \"<line #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<polygon\", \"<polygon #{$transform}\");\n    $flipped-url: url-encode($flipped-url);\n\n    @include ltr () {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n    @include rtl() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$flipped-url}\");\n    }\n  }\n}\n\n// Add property horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin property-horizontal($prop, $start, $end: $start) {\n  @if $start == 0 and $end == 0 {\n    #{$prop}-left: $start;\n    #{$prop}-right: $end;\n\n  } @else {\n    -webkit-#{$prop}-start: $start;\n    #{$prop}-inline-start: $start;\n    -webkit-#{$prop}-end: $end;\n    #{$prop}-inline-end: $end;\n  }\n}\n\n// Add property for all directions\n// @param {string} $prop\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// @param {boolean} $content include content or use default\n// ----------------------------------------------------------\n@mixin property($prop, $top, $end: $top, $bottom: $top, $start: $end) {\n  @include property-horizontal($prop, $start, $end);\n  #{$prop}-top: $top;\n  #{$prop}-bottom: $bottom;\n}\n\n// Add padding horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin padding-horizontal($start, $end: $start) {\n  @include property-horizontal(padding, $start, $end);\n}\n\n// Add padding for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin padding($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(padding, $top, $end, $bottom, $start);\n}\n\n// Add margin horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin margin-horizontal($start, $end: $start) {\n  @include property-horizontal(margin, $start, $end);\n}\n\n// Add margin for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin margin($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(margin, $top, $end, $bottom, $start);\n}\n\n// Add position horizontal\n// @param {string} $start - amount to position start\n// @param {string} $end - amount to left: 0; end\n// ----------------------------------------------------------\n@mixin position-horizontal($start: null, $end: null) {\n  @if $start == $end {\n    @include multi-dir() {\n      left: $start;\n      right: $end;\n    }\n  } @else {\n    @at-root {\n      & {\n        inset-inline-start: $start;\n        inset-inline-end: $end;\n      }\n    }\n  }\n}\n\n// Add position for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin position($top: null, $end: null, $bottom: null, $start: null) {\n  @include position-horizontal($start, $end);\n  top: $top;\n  bottom: $bottom;\n}\n\n// Add border for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin border($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(border, $top, $end, $bottom, $start);\n}\n\n// Add border radius for all directions\n// @param {string} $top-start\n// @param {string} $top-end\n// @param {string} $bottom-end\n// @param {string} $bottom-start\n// ----------------------------------------------------------\n@mixin border-radius($top-start, $top-end: $top-start, $bottom-end: $top-start, $bottom-start: $top-end) {\n  @if $top-start == $top-end and $top-start == $bottom-end and $top-start == $bottom-start {\n    border-radius: $top-start;\n  } @else {\n    border-start-start-radius: $top-start;\n    border-start-end-radius: $top-end;\n    border-end-end-radius: $bottom-end;\n    border-end-start-radius: $bottom-start;\n  }\n}\n\n// Add direction for all directions\n// @param {string} $dir - Direction on LTR\n@mixin direction($dir) {\n  $other-dir: null;\n\n  @if $dir == ltr {\n    $other-dir: rtl;\n  } @else {\n    $other-dir: ltr;\n  }\n\n  @include ltr() {\n    direction: $dir;\n  }\n  @include rtl() {\n    direction: $other-dir;\n  }\n}\n\n// Add float for all directions\n// @param {string} $side\n// @param {string} $decorator - !important\n@mixin float($side, $decorator: null) {\n  @if $side == start {\n    @include ltr() {\n      float: left $decorator;\n    }\n    @include rtl() {\n      float: right $decorator;\n    }\n  } @else if $side == end {\n    @include ltr() {\n      float: right $decorator;\n    }\n    @include rtl() {\n      float: left $decorator;\n    }\n  } @else {\n    @include multi-dir() {\n      float: $side $decorator;\n    }\n  }\n}\n\n@mixin background-position($horizontal, $horizontal-amount: null, $vertical: null, $vertical-amount: null) {\n  @if $horizontal == start or $horizontal == end {\n    $horizontal-ltr: null;\n    $horizontal-rtl: null;\n    @if $horizontal == start {\n      $horizontal-ltr: left;\n      $horizontal-rtl: right;\n    } @else {\n      $horizontal-ltr: right;\n      $horizontal-rtl: left;\n    }\n\n    @include ltr() {\n      background-position: $horizontal-ltr $horizontal-amount $vertical $vertical-amount;\n    }\n    @include rtl() {\n      background-position: $horizontal-rtl $horizontal-amount $vertical $vertical-amount;\n    }\n  } @else {\n    @include multi-dir() {\n      background-position: $horizontal $horizontal-amount $vertical $vertical-amount;\n    }\n  }\n}\n\n@mixin transform-origin($x-axis, $y-axis: null) {\n  @if $x-axis == start {\n    @include ltr() {\n      transform-origin: left $y-axis;\n    }\n    @include rtl() {\n      transform-origin: right $y-axis;\n    }\n  } @else if $x-axis == end {\n    @include ltr() {\n      transform-origin: right $y-axis;\n    }\n    @include rtl() {\n      transform-origin: left $y-axis;\n    }\n  } @else if $x-axis == left or $x-axis == right {\n    @include multi-dir() {\n      transform-origin: $x-axis $y-axis;\n    }\n  } @else {\n    @include ltr() {\n      transform-origin: $x-axis $y-axis;\n    }\n    @include rtl() {\n      transform-origin: calc(100% - #{$x-axis}) $y-axis;\n    }\n  }\n}\n\n// Add transform for all directions\n// @param {string} $transforms - comma separated list of transforms\n@mixin transform($transforms...) {\n  $extra: null;\n\n  $x: null;\n  $ltr-translate: null;\n  $rtl-translate: null;\n\n  @each $transform in $transforms {\n    @if (str-index($transform, translate3d)) {\n      $transform: str-replace($transform, 'translate3d(');\n      $transform: str-replace($transform, ')');\n\n      $coordinates: str-split($transform, ',');\n\n      $x: nth($coordinates, 1);\n      $y: nth($coordinates, 2);\n      $z: nth($coordinates, 3);\n\n      $ltr-translate: translate3d($x, $y, $z);\n      $rtl-translate: translate3d(calc(-1 * #{$x}), $y, $z);\n    } @else {\n      @if $extra == null {\n        $extra: $transform;\n      } @else {\n        $extra: $extra $transform;\n      }\n    }\n  }\n\n  @if $x == '0' or $x == null {\n    @include multi-dir() {\n      transform: $ltr-translate $extra;\n    }\n  } @else {\n    @include ltr() {\n      transform: $ltr-translate $extra;\n    }\n\n    @include rtl() {\n      transform: $rtl-translate $extra;\n    }\n  }\n}\n", "\n// Global Utility Functions\n@import \"./ionic.functions.string\";\n\n// Global Color Functions\n@import \"./ionic.functions.color\";\n\n// Global Font Functions\n@import \"./ionic.functions.font\";\n\n// Global Mixins\n@import \"./ionic.mixins\";\n\n// Default Theme\n@import \"./ionic.theme.default\";\n\n\n// Default General\n// --------------------------------------------------\n$font-family-base:                  var(--ion-font-family, inherit);\n\n// Hairlines width\n$hairlines-width: .55px;\n\n// The minimum dimensions at which your layout will change,\n// adapting to different screen sizes, for use in media queries\n$screen-breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px\n);\n\n// Input placeholder opacity\n// Ensures that the placeholder has the\n// correct color contrast against the background.\n$placeholder-opacity: var(--ion-placeholder-opacity, 0.6);\n\n$form-control-label-margin: 16px;\n\n// How much the stacked labels should be scaled by\n/// The value 0.75 is used to match the MD spec.\n/// iOS does not have a floating label design spec, so we standardize on 0.75.\n$form-control-label-stacked-scale: 0.75;\n\n\n// Z-Index\n// --------------------------------------------------\n// Grouped by elements which would be siblings\n\n$z-index-menu-overlay:           1000;\n$z-index-overlay:                1001;\n\n$z-index-fixed-content:          999;\n$z-index-refresher:              -1;\n\n$z-index-page-container:         0;\n$z-index-toolbar:                10;\n$z-index-toolbar-background:     -1;\n$z-index-toolbar-buttons:        99;\n\n$z-index-backdrop:               2;\n$z-index-overlay-wrapper:        10;\n\n$z-index-item-options:           1;\n$z-index-item-input:             2;\n$z-index-item-divider:           100;\n\n$z-index-reorder-selected:       100;\n", "@import \"../../themes/ionic.globals.ios\";\n\n// iOS Menu\n// --------------------------------------------------\n\n/// @prop - Box shadow color of the menu\n$menu-ios-box-shadow-color:      rgba(0, 0, 0, .08);\n\n/// @prop - Box shadow of the menu\n$menu-ios-box-shadow:            -8px 0 42px $menu-ios-box-shadow-color;\n\n/// @prop - Box shadow of the menu in rtl mode\n$menu-ios-box-shadow-rtl:        8px 0 42px $menu-ios-box-shadow-color;\n\n/// @prop - Box shadow of the reveal menu\n$menu-ios-box-shadow-reveal:     $menu-ios-box-shadow;\n\n/// @prop - Box shadow of the reveal menu\n$menu-ios-box-shadow-reveal-rtl: $menu-ios-box-shadow-rtl;\n\n/// @prop - Box shadow of the push menu\n$menu-ios-box-shadow-push:       null;\n\n/// @prop - Box shadow of the overlay menu\n$menu-ios-box-shadow-overlay:    null;\n", "@import \"../../themes/ionic.globals.md\";\n\n// Material Design Menu\n// --------------------------------------------------\n\n/// @prop - Box shadow of the menu\n$menu-md-box-shadow:            4px 0px 16px rgba(0, 0, 0, 0.18);\n", "// ! normalize.css v3.0.2 | MIT License | github.com/necolas/normalize.css\n\n\n// HTML5 display definitions\n// ==========================================================================\n\n// 1. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\naudio,\ncanvas,\nprogress,\nvideo {\n  vertical-align: baseline; // 1\n}\n\n// Prevent modern browsers from displaying `audio` without controls.\n// Remove excess height in iOS 5 devices.\naudio:not([controls]) {\n  display: none;\n\n  height: 0;\n}\n\n\n// Text-level semantics\n// ==========================================================================\n\n// Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\nb,\nstrong {\n  font-weight: bold;\n}\n\n// Embedded content\n// ==========================================================================\n\n// Makes it so the img does not flow outside container\nimg {\n  max-width: 100%;\n}\n\n// Grouping content\n// ==========================================================================\n\nhr {\n  height: 1px;\n\n  border-width: 0;\n\n  box-sizing: content-box;\n}\n\n// Contain overflow in all browsers.\npre {\n  overflow: auto;\n}\n\n// Address odd `em`-unit font size rendering in all browsers.\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n\n// Forms\n// ==========================================================================\n\n// Known limitation: by default, Chrome and Safari on OS X allow very limited\n// styling of `select`, unless a `border` property is set.\n\n// 1. Correct color not being inherited.\n//    Known issue: affects color of disabled elements.\n// 2. Correct font properties not being inherited.\n// 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n//\n\nlabel,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  line-height: normal;\n}\n\ntextarea {\n  overflow: auto;\n\n  height: auto;\n\n  font: inherit;\n  color: inherit;\n}\n\ntextarea::placeholder {\n  padding-left: 2px;\n}\n\nform,\ninput,\noptgroup,\nselect {\n  margin: 0; // 3\n\n  font: inherit; // 2\n  color: inherit; // 1\n}\n\n// 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n//    and `video` controls.\n// 2. Correct inability to style clickable `input` types in iOS.\n// 3. Improve usability and consistency of cursor style between image-type\n//    `input` and others.\nhtml input[type=\"button\"], // 1\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  cursor: pointer; // 3\n\n  -webkit-appearance: button; // 2\n}\n\n// remove 300ms delay\na,\na div,\na span,\na ion-icon,\na ion-label,\nbutton,\nbutton div,\nbutton span,\nbutton ion-icon,\nbutton ion-label,\n.ion-tappable,\n[tappable],\n[tappable] div,\n[tappable] span,\n[tappable] ion-icon,\n[tappable] ion-label,\ninput,\ntextarea {\n  touch-action: manipulation;\n}\n\na ion-label,\nbutton ion-label {\n  pointer-events: none;\n}\n\nbutton {\n  padding: 0;\n  border: 0;\n  border-radius: 0;\n  font-family: inherit;\n  font-style: inherit;\n  font-variant: inherit;\n  line-height: 1;\n  text-transform: none;\n  cursor: pointer;\n\n  -webkit-appearance: button;\n}\n\n[tappable] {\n  cursor: pointer;\n}\n\n// Re-set default cursor for disabled elements.\na[disabled],\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n// Remove inner padding and border in Firefox 4+.\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  padding: 0;\n\n  border: 0;\n}\n\n// Fix the cursor style for Chrome's increment/decrement buttons. For certain\n// `font-size` values of the `input`, it causes the cursor style of the\n// decrement button to change from `default` to `text`.\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n// Remove inner padding and search cancel button in Safari and Chrome on OS X.\n// Safari (but not Chrome) clips the cancel button when the search input has\n// padding (and `textfield` appearance).\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n\n// Tables\n// ==========================================================================//\n\n// Remove most spacing between table cells.\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n", "@import \"../themes/ionic.globals\";\n@import \"../themes/ionic.mixins\";\n\n\n// Structure\n// --------------------------------------------------\n// Adds structural css to the native html elements\n\n* {\n  box-sizing: border-box;\n\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n}\n\nhtml {\n  width: 100%;\n  height: 100%;\n  -webkit-text-size-adjust: 100%;\n\n  text-size-adjust: 100%;\n}\n\nhtml:not(.hydrated) body {\n  display: none;\n}\n\nhtml.ion-ce body {\n  display: block;\n}\n\nhtml.plt-pwa {\n  height: 100vh;\n}\n\nbody {\n  @include font-smoothing();\n  @include margin(0);\n  @include padding(0);\n\n  position: fixed;\n\n  width: 100%;\n  max-width: 100%;\n  height: 100%;\n  max-height: 100%;\n\n  /**\n   * Because body has position: fixed,\n   * it should be promoted to its own\n   * layer.\n   *\n   * WebKit does not always promote\n   * the body to its own layer on page\n   * load in Ionic apps. Once scrolling on\n   * ion-content starts, WebKit will promote\n   * body. Unfortunately, this causes a re-paint\n   * which results in scrolling being halted\n   * until the next user gesture.\n   *\n   * This impacts the Custom Elements build.\n   * The lazy loaded build causes the browser to\n   * re-paint during hydration which causes WebKit\n   * to promote body to its own layer.\n   * In the CE Build, this hydration does not\n   * happen, so the additional re-paint does not occur.\n   */\n  transform: translateZ(0);\n\n  text-rendering: optimizeLegibility;\n\n  overflow: hidden;\n\n  touch-action: manipulation;\n\n  -webkit-user-drag: none;\n\n  -ms-content-zooming: none;\n\n  word-wrap: break-word;\n\n  overscroll-behavior-y: none;\n  -webkit-text-size-adjust: none;\n\n  text-size-adjust: none;\n}\n", "\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n@mixin tablet-viewport() {\n  @media screen and (min-width: 768px) {\n    @content;\n  }\n}\n\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n@mixin mobile-viewport() {\n  @media screen and (max-width: 767px) {\n    @content;\n  }\n}\n\n@mixin input-cover() {\n  @include position(0, null, null, 0);\n  @include margin(0);\n\n  position: absolute;\n\n  width: 100%;\n  height: 100%;\n\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n\n  appearance: none;\n  outline: none;\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n@mixin visually-hidden() {\n  position: absolute;\n\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  width: 100%;\n  height: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n\n  opacity: 0;\n  overflow: hidden;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n@mixin text-inherit() {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n}\n\n@mixin button-state() {\n  @include position(0, 0, 0, 0);\n\n  position: absolute;\n\n  content: \"\";\n\n  opacity: 0;\n}\n\n// Font smoothing\n// --------------------------------------------------\n\n@mixin font-smoothing() {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n// Get the key from a map based on the index\n@function index-to-key($map, $index) {\n  $keys: map-keys($map);\n\n  @return nth($keys, $index);\n}\n\n\n// Breakpoint Mixins\n// ---------------------------------------------------------------------------------\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$screen-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// ---------------------------------------------------------------------------------\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $screen-breakpoints) {\n  $min: map-get($breakpoints, $name);\n\n  @return if($name != index-to-key($breakpoints, 1), $min, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $screen-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $screen-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $screen-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Maximum breakpoint width. Null for the smallest (first) breakpoint.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n//\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\t// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\t// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $screen-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $screen-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n\n// Text Direction - ltr / rtl\n//\n// CSS defaults to use the ltr css, and adds [dir=rtl] selectors\n// to override ltr defaults.\n// ----------------------------------------------------------\n\n@mixin multi-dir() {\n  @content;\n\n  // $root: #{&};\n  // @at-root [dir] {\n  //   #{$root} {\n  //     @content;\n  //   }\n  // }\n}\n\n@mixin rtl() {\n  $root: #{&};\n\n  $rootSplit: str-split($root, \",\");\n  $selectors: #{add-root-selector($root, \"[dir=rtl]\")};\n  $selectorsSplit: str-split($selectors, \",\");\n\n  $hostContextSelectors: ();\n  $restSelectors: ();\n  $dirSelectors: ();\n\n  // Selectors must be split into individual selectors in case the browser\n  // doesn't support a specific selector.\n  // For example, Firefox and Safari doesn't support `:host-context()`.\n  // If an invalid selector is used, then the entire group of selectors\n  // will be ignored.\n  // @link https://www.w3.org/TR/selectors-3/#grouping\n  @each $selector in $selectorsSplit {\n    // Group the selectors back into a single selector to optimize the output.\n    @if str-index($selector, \":host-context\") {\n      $hostContextSelectors: append($hostContextSelectors, $selector, comma);\n    } @else {\n      // Group the selectors back into a single selector to optimize the output.\n      $restSelectors: append($restSelectors, $selector, comma);\n    }\n  }\n\n  // Supported by Chrome.\n  @if length($hostContextSelectors) > 0 {\n    @at-root #{$hostContextSelectors} {\n      @content;\n    }\n  }\n\n  // Supported by all browsers.\n  @if length($restSelectors) > 0 {\n    @at-root #{$restSelectors} {\n      @content;\n    }\n  }\n\n  // If browser can support `:dir()`, then add the `:dir()` selectors.\n  @supports selector(:dir(rtl)) {\n    // Adding :dir() in case the browser doesn't support `:host-context()` and does support `:dir()`.\n    // `:host-context()` is added:\n    // - through the `add-root-selector()` function.\n    // - first so that it takes precedence over `:dir()`.\n    // For example,\n    // - Firefox doesn't support `:host-context()`, but does support `:dir()`.\n    // - Safari doesn't support `:host-context()`, but Safari 16.4+ supports `:dir()`\n    // @link https://webkit.org/blog/13966/webkit-features-in-safari-16-4/\n    // -- However, there is a Webkit bug on v16 that prevents `:dir()` from working when\n    // -- the app direction is changed dynamically. v17+ works fine.\n    // -- @link https://bugs.webkit.org/show_bug.cgi?id=257133\n\n    // Supported by Firefox.\n    @at-root #{add-root-selector($root, \":dir(rtl)\", false)} {\n      @content;\n    }\n  }\n}\n\n@mixin ltr() {\n  @content;\n}\n\n\n// SVG Background Image Mixin\n// @param {string} $svg\n// ----------------------------------------------------------\n@mixin svg-background-image($svg, $flip-rtl: false) {\n  $url: url-encode($svg);\n  $viewBox: str-split(str-extract($svg, \"viewBox='\", \"'\"), \" \");\n\n  @if $flip-rtl != true or $viewBox == null {\n    @include multi-dir() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n  } @else {\n    $transform: \"transform='translate(#{nth($viewBox, 3)}, 0) scale(-1, 1)'\";\n    $flipped-url: $svg;\n    $flipped-url: str-replace($flipped-url, \"<path\", \"<path #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<line\", \"<line #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<polygon\", \"<polygon #{$transform}\");\n    $flipped-url: url-encode($flipped-url);\n\n    @include ltr () {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n    @include rtl() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$flipped-url}\");\n    }\n  }\n}\n\n// Add property horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin property-horizontal($prop, $start, $end: $start) {\n  @if $start == 0 and $end == 0 {\n    #{$prop}-left: $start;\n    #{$prop}-right: $end;\n\n  } @else {\n    -webkit-#{$prop}-start: $start;\n    #{$prop}-inline-start: $start;\n    -webkit-#{$prop}-end: $end;\n    #{$prop}-inline-end: $end;\n  }\n}\n\n// Add property for all directions\n// @param {string} $prop\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// @param {boolean} $content include content or use default\n// ----------------------------------------------------------\n@mixin property($prop, $top, $end: $top, $bottom: $top, $start: $end) {\n  @include property-horizontal($prop, $start, $end);\n  #{$prop}-top: $top;\n  #{$prop}-bottom: $bottom;\n}\n\n// Add padding horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin padding-horizontal($start, $end: $start) {\n  @include property-horizontal(padding, $start, $end);\n}\n\n// Add padding for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin padding($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(padding, $top, $end, $bottom, $start);\n}\n\n// Add margin horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin margin-horizontal($start, $end: $start) {\n  @include property-horizontal(margin, $start, $end);\n}\n\n// Add margin for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin margin($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(margin, $top, $end, $bottom, $start);\n}\n\n// Add position horizontal\n// @param {string} $start - amount to position start\n// @param {string} $end - amount to left: 0; end\n// ----------------------------------------------------------\n@mixin position-horizontal($start: null, $end: null) {\n  @if $start == $end {\n    @include multi-dir() {\n      left: $start;\n      right: $end;\n    }\n  } @else {\n    @at-root {\n      & {\n        inset-inline-start: $start;\n        inset-inline-end: $end;\n      }\n    }\n  }\n}\n\n// Add position for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin position($top: null, $end: null, $bottom: null, $start: null) {\n  @include position-horizontal($start, $end);\n  top: $top;\n  bottom: $bottom;\n}\n\n// Add border for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin border($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(border, $top, $end, $bottom, $start);\n}\n\n// Add border radius for all directions\n// @param {string} $top-start\n// @param {string} $top-end\n// @param {string} $bottom-end\n// @param {string} $bottom-start\n// ----------------------------------------------------------\n@mixin border-radius($top-start, $top-end: $top-start, $bottom-end: $top-start, $bottom-start: $top-end) {\n  @if $top-start == $top-end and $top-start == $bottom-end and $top-start == $bottom-start {\n    border-radius: $top-start;\n  } @else {\n    border-start-start-radius: $top-start;\n    border-start-end-radius: $top-end;\n    border-end-end-radius: $bottom-end;\n    border-end-start-radius: $bottom-start;\n  }\n}\n\n// Add direction for all directions\n// @param {string} $dir - Direction on LTR\n@mixin direction($dir) {\n  $other-dir: null;\n\n  @if $dir == ltr {\n    $other-dir: rtl;\n  } @else {\n    $other-dir: ltr;\n  }\n\n  @include ltr() {\n    direction: $dir;\n  }\n  @include rtl() {\n    direction: $other-dir;\n  }\n}\n\n// Add float for all directions\n// @param {string} $side\n// @param {string} $decorator - !important\n@mixin float($side, $decorator: null) {\n  @if $side == start {\n    @include ltr() {\n      float: left $decorator;\n    }\n    @include rtl() {\n      float: right $decorator;\n    }\n  } @else if $side == end {\n    @include ltr() {\n      float: right $decorator;\n    }\n    @include rtl() {\n      float: left $decorator;\n    }\n  } @else {\n    @include multi-dir() {\n      float: $side $decorator;\n    }\n  }\n}\n\n@mixin background-position($horizontal, $horizontal-amount: null, $vertical: null, $vertical-amount: null) {\n  @if $horizontal == start or $horizontal == end {\n    $horizontal-ltr: null;\n    $horizontal-rtl: null;\n    @if $horizontal == start {\n      $horizontal-ltr: left;\n      $horizontal-rtl: right;\n    } @else {\n      $horizontal-ltr: right;\n      $horizontal-rtl: left;\n    }\n\n    @include ltr() {\n      background-position: $horizontal-ltr $horizontal-amount $vertical $vertical-amount;\n    }\n    @include rtl() {\n      background-position: $horizontal-rtl $horizontal-amount $vertical $vertical-amount;\n    }\n  } @else {\n    @include multi-dir() {\n      background-position: $horizontal $horizontal-amount $vertical $vertical-amount;\n    }\n  }\n}\n\n@mixin transform-origin($x-axis, $y-axis: null) {\n  @if $x-axis == start {\n    @include ltr() {\n      transform-origin: left $y-axis;\n    }\n    @include rtl() {\n      transform-origin: right $y-axis;\n    }\n  } @else if $x-axis == end {\n    @include ltr() {\n      transform-origin: right $y-axis;\n    }\n    @include rtl() {\n      transform-origin: left $y-axis;\n    }\n  } @else if $x-axis == left or $x-axis == right {\n    @include multi-dir() {\n      transform-origin: $x-axis $y-axis;\n    }\n  } @else {\n    @include ltr() {\n      transform-origin: $x-axis $y-axis;\n    }\n    @include rtl() {\n      transform-origin: calc(100% - #{$x-axis}) $y-axis;\n    }\n  }\n}\n\n// Add transform for all directions\n// @param {string} $transforms - comma separated list of transforms\n@mixin transform($transforms...) {\n  $extra: null;\n\n  $x: null;\n  $ltr-translate: null;\n  $rtl-translate: null;\n\n  @each $transform in $transforms {\n    @if (str-index($transform, translate3d)) {\n      $transform: str-replace($transform, 'translate3d(');\n      $transform: str-replace($transform, ')');\n\n      $coordinates: str-split($transform, ',');\n\n      $x: nth($coordinates, 1);\n      $y: nth($coordinates, 2);\n      $z: nth($coordinates, 3);\n\n      $ltr-translate: translate3d($x, $y, $z);\n      $rtl-translate: translate3d(calc(-1 * #{$x}), $y, $z);\n    } @else {\n      @if $extra == null {\n        $extra: $transform;\n      } @else {\n        $extra: $extra $transform;\n      }\n    }\n  }\n\n  @if $x == '0' or $x == null {\n    @include multi-dir() {\n      transform: $ltr-translate $extra;\n    }\n  } @else {\n    @include ltr() {\n      transform: $ltr-translate $extra;\n    }\n\n    @include rtl() {\n      transform: $rtl-translate $extra;\n    }\n  }\n}\n", "@import \"../themes/ionic.globals\";\n@import \"../themes/ionic.mixins\";\n\n// Typography\n// --------------------------------------------------\n\n/// @prop - Font weight of all headings\n$headings-font-weight:         500;\n\n/// @prop - Line height of all headings\n$headings-line-height:         1.2;\n\n/// @prop - Font size of heading level 1\n$h1-font-size:                 dynamic-font(26px);\n\n/// @prop - Font size of heading level 2\n$h2-font-size:                 dynamic-font(24px);\n\n/// @prop - Font size of heading level 3\n$h3-font-size:                 dynamic-font(22px);\n\n/// @prop - Font size of heading level 4\n$h4-font-size:                 dynamic-font(20px);\n\n/// @prop - Font size of heading level 5\n$h5-font-size:                 dynamic-font(18px);\n\n/// @prop - Font size of heading level 6\n$h6-font-size:                 dynamic-font(16px);\n\nhtml {\n  font-family: var(--ion-font-family);\n}\n\n/**\n * Dynamic Type is an iOS-only feature, so\n * this should only be enabled on iOS devices.\n */\n@supports (-webkit-touch-callout: none) {\n  html {\n    /**\n     * Includes fallback if Dynamic Type is not enabled.\n     */\n    font: var(--ion-dynamic-font, 16px var(--ion-font-family));\n  }\n}\n\na {\n  background-color: transparent;\n  color: ion-color(primary, base);\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  @include margin(16px, null, 10px, null);\n\n  font-weight: $headings-font-weight;\n\n  line-height: $headings-line-height;\n}\n\nh1 {\n  @include margin(20px, null, null, null);\n\n  font-size: $h1-font-size;\n}\n\nh2 {\n  @include margin(18px, null, null, null);\n\n  font-size: $h2-font-size;\n}\n\nh3 {\n  font-size: $h3-font-size;\n}\n\nh4 {\n  font-size: $h4-font-size;\n}\n\nh5 {\n  font-size: $h5-font-size;\n}\n\nh6 {\n  font-size: $h6-font-size;\n}\n\nsmall {\n  font-size: 75%;\n}\n\nsub,\nsup {\n  position: relative;\n\n  font-size: 75%;\n\n  line-height: 0;\n\n  vertical-align: baseline;\n}\n\nsup {\n  top: -.5em;\n}\n\nsub {\n  bottom: -.25em;\n}\n", "\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n@mixin tablet-viewport() {\n  @media screen and (min-width: 768px) {\n    @content;\n  }\n}\n\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n@mixin mobile-viewport() {\n  @media screen and (max-width: 767px) {\n    @content;\n  }\n}\n\n@mixin input-cover() {\n  @include position(0, null, null, 0);\n  @include margin(0);\n\n  position: absolute;\n\n  width: 100%;\n  height: 100%;\n\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n\n  appearance: none;\n  outline: none;\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n@mixin visually-hidden() {\n  position: absolute;\n\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  width: 100%;\n  height: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n\n  opacity: 0;\n  overflow: hidden;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n@mixin text-inherit() {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n}\n\n@mixin button-state() {\n  @include position(0, 0, 0, 0);\n\n  position: absolute;\n\n  content: \"\";\n\n  opacity: 0;\n}\n\n// Font smoothing\n// --------------------------------------------------\n\n@mixin font-smoothing() {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n// Get the key from a map based on the index\n@function index-to-key($map, $index) {\n  $keys: map-keys($map);\n\n  @return nth($keys, $index);\n}\n\n\n// Breakpoint Mixins\n// ---------------------------------------------------------------------------------\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$screen-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// ---------------------------------------------------------------------------------\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $screen-breakpoints) {\n  $min: map-get($breakpoints, $name);\n\n  @return if($name != index-to-key($breakpoints, 1), $min, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $screen-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $screen-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $screen-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Maximum breakpoint width. Null for the smallest (first) breakpoint.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n//\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\t// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\t// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $screen-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $screen-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n\n// Text Direction - ltr / rtl\n//\n// CSS defaults to use the ltr css, and adds [dir=rtl] selectors\n// to override ltr defaults.\n// ----------------------------------------------------------\n\n@mixin multi-dir() {\n  @content;\n\n  // $root: #{&};\n  // @at-root [dir] {\n  //   #{$root} {\n  //     @content;\n  //   }\n  // }\n}\n\n@mixin rtl() {\n  $root: #{&};\n\n  $rootSplit: str-split($root, \",\");\n  $selectors: #{add-root-selector($root, \"[dir=rtl]\")};\n  $selectorsSplit: str-split($selectors, \",\");\n\n  $hostContextSelectors: ();\n  $restSelectors: ();\n  $dirSelectors: ();\n\n  // Selectors must be split into individual selectors in case the browser\n  // doesn't support a specific selector.\n  // For example, Firefox and Safari doesn't support `:host-context()`.\n  // If an invalid selector is used, then the entire group of selectors\n  // will be ignored.\n  // @link https://www.w3.org/TR/selectors-3/#grouping\n  @each $selector in $selectorsSplit {\n    // Group the selectors back into a single selector to optimize the output.\n    @if str-index($selector, \":host-context\") {\n      $hostContextSelectors: append($hostContextSelectors, $selector, comma);\n    } @else {\n      // Group the selectors back into a single selector to optimize the output.\n      $restSelectors: append($restSelectors, $selector, comma);\n    }\n  }\n\n  // Supported by Chrome.\n  @if length($hostContextSelectors) > 0 {\n    @at-root #{$hostContextSelectors} {\n      @content;\n    }\n  }\n\n  // Supported by all browsers.\n  @if length($restSelectors) > 0 {\n    @at-root #{$restSelectors} {\n      @content;\n    }\n  }\n\n  // If browser can support `:dir()`, then add the `:dir()` selectors.\n  @supports selector(:dir(rtl)) {\n    // Adding :dir() in case the browser doesn't support `:host-context()` and does support `:dir()`.\n    // `:host-context()` is added:\n    // - through the `add-root-selector()` function.\n    // - first so that it takes precedence over `:dir()`.\n    // For example,\n    // - Firefox doesn't support `:host-context()`, but does support `:dir()`.\n    // - Safari doesn't support `:host-context()`, but Safari 16.4+ supports `:dir()`\n    // @link https://webkit.org/blog/13966/webkit-features-in-safari-16-4/\n    // -- However, there is a Webkit bug on v16 that prevents `:dir()` from working when\n    // -- the app direction is changed dynamically. v17+ works fine.\n    // -- @link https://bugs.webkit.org/show_bug.cgi?id=257133\n\n    // Supported by Firefox.\n    @at-root #{add-root-selector($root, \":dir(rtl)\", false)} {\n      @content;\n    }\n  }\n}\n\n@mixin ltr() {\n  @content;\n}\n\n\n// SVG Background Image Mixin\n// @param {string} $svg\n// ----------------------------------------------------------\n@mixin svg-background-image($svg, $flip-rtl: false) {\n  $url: url-encode($svg);\n  $viewBox: str-split(str-extract($svg, \"viewBox='\", \"'\"), \" \");\n\n  @if $flip-rtl != true or $viewBox == null {\n    @include multi-dir() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n  } @else {\n    $transform: \"transform='translate(#{nth($viewBox, 3)}, 0) scale(-1, 1)'\";\n    $flipped-url: $svg;\n    $flipped-url: str-replace($flipped-url, \"<path\", \"<path #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<line\", \"<line #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<polygon\", \"<polygon #{$transform}\");\n    $flipped-url: url-encode($flipped-url);\n\n    @include ltr () {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n    @include rtl() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$flipped-url}\");\n    }\n  }\n}\n\n// Add property horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin property-horizontal($prop, $start, $end: $start) {\n  @if $start == 0 and $end == 0 {\n    #{$prop}-left: $start;\n    #{$prop}-right: $end;\n\n  } @else {\n    -webkit-#{$prop}-start: $start;\n    #{$prop}-inline-start: $start;\n    -webkit-#{$prop}-end: $end;\n    #{$prop}-inline-end: $end;\n  }\n}\n\n// Add property for all directions\n// @param {string} $prop\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// @param {boolean} $content include content or use default\n// ----------------------------------------------------------\n@mixin property($prop, $top, $end: $top, $bottom: $top, $start: $end) {\n  @include property-horizontal($prop, $start, $end);\n  #{$prop}-top: $top;\n  #{$prop}-bottom: $bottom;\n}\n\n// Add padding horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin padding-horizontal($start, $end: $start) {\n  @include property-horizontal(padding, $start, $end);\n}\n\n// Add padding for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin padding($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(padding, $top, $end, $bottom, $start);\n}\n\n// Add margin horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin margin-horizontal($start, $end: $start) {\n  @include property-horizontal(margin, $start, $end);\n}\n\n// Add margin for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin margin($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(margin, $top, $end, $bottom, $start);\n}\n\n// Add position horizontal\n// @param {string} $start - amount to position start\n// @param {string} $end - amount to left: 0; end\n// ----------------------------------------------------------\n@mixin position-horizontal($start: null, $end: null) {\n  @if $start == $end {\n    @include multi-dir() {\n      left: $start;\n      right: $end;\n    }\n  } @else {\n    @at-root {\n      & {\n        inset-inline-start: $start;\n        inset-inline-end: $end;\n      }\n    }\n  }\n}\n\n// Add position for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin position($top: null, $end: null, $bottom: null, $start: null) {\n  @include position-horizontal($start, $end);\n  top: $top;\n  bottom: $bottom;\n}\n\n// Add border for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin border($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(border, $top, $end, $bottom, $start);\n}\n\n// Add border radius for all directions\n// @param {string} $top-start\n// @param {string} $top-end\n// @param {string} $bottom-end\n// @param {string} $bottom-start\n// ----------------------------------------------------------\n@mixin border-radius($top-start, $top-end: $top-start, $bottom-end: $top-start, $bottom-start: $top-end) {\n  @if $top-start == $top-end and $top-start == $bottom-end and $top-start == $bottom-start {\n    border-radius: $top-start;\n  } @else {\n    border-start-start-radius: $top-start;\n    border-start-end-radius: $top-end;\n    border-end-end-radius: $bottom-end;\n    border-end-start-radius: $bottom-start;\n  }\n}\n\n// Add direction for all directions\n// @param {string} $dir - Direction on LTR\n@mixin direction($dir) {\n  $other-dir: null;\n\n  @if $dir == ltr {\n    $other-dir: rtl;\n  } @else {\n    $other-dir: ltr;\n  }\n\n  @include ltr() {\n    direction: $dir;\n  }\n  @include rtl() {\n    direction: $other-dir;\n  }\n}\n\n// Add float for all directions\n// @param {string} $side\n// @param {string} $decorator - !important\n@mixin float($side, $decorator: null) {\n  @if $side == start {\n    @include ltr() {\n      float: left $decorator;\n    }\n    @include rtl() {\n      float: right $decorator;\n    }\n  } @else if $side == end {\n    @include ltr() {\n      float: right $decorator;\n    }\n    @include rtl() {\n      float: left $decorator;\n    }\n  } @else {\n    @include multi-dir() {\n      float: $side $decorator;\n    }\n  }\n}\n\n@mixin background-position($horizontal, $horizontal-amount: null, $vertical: null, $vertical-amount: null) {\n  @if $horizontal == start or $horizontal == end {\n    $horizontal-ltr: null;\n    $horizontal-rtl: null;\n    @if $horizontal == start {\n      $horizontal-ltr: left;\n      $horizontal-rtl: right;\n    } @else {\n      $horizontal-ltr: right;\n      $horizontal-rtl: left;\n    }\n\n    @include ltr() {\n      background-position: $horizontal-ltr $horizontal-amount $vertical $vertical-amount;\n    }\n    @include rtl() {\n      background-position: $horizontal-rtl $horizontal-amount $vertical $vertical-amount;\n    }\n  } @else {\n    @include multi-dir() {\n      background-position: $horizontal $horizontal-amount $vertical $vertical-amount;\n    }\n  }\n}\n\n@mixin transform-origin($x-axis, $y-axis: null) {\n  @if $x-axis == start {\n    @include ltr() {\n      transform-origin: left $y-axis;\n    }\n    @include rtl() {\n      transform-origin: right $y-axis;\n    }\n  } @else if $x-axis == end {\n    @include ltr() {\n      transform-origin: right $y-axis;\n    }\n    @include rtl() {\n      transform-origin: left $y-axis;\n    }\n  } @else if $x-axis == left or $x-axis == right {\n    @include multi-dir() {\n      transform-origin: $x-axis $y-axis;\n    }\n  } @else {\n    @include ltr() {\n      transform-origin: $x-axis $y-axis;\n    }\n    @include rtl() {\n      transform-origin: calc(100% - #{$x-axis}) $y-axis;\n    }\n  }\n}\n\n// Add transform for all directions\n// @param {string} $transforms - comma separated list of transforms\n@mixin transform($transforms...) {\n  $extra: null;\n\n  $x: null;\n  $ltr-translate: null;\n  $rtl-translate: null;\n\n  @each $transform in $transforms {\n    @if (str-index($transform, translate3d)) {\n      $transform: str-replace($transform, 'translate3d(');\n      $transform: str-replace($transform, ')');\n\n      $coordinates: str-split($transform, ',');\n\n      $x: nth($coordinates, 1);\n      $y: nth($coordinates, 2);\n      $z: nth($coordinates, 3);\n\n      $ltr-translate: translate3d($x, $y, $z);\n      $rtl-translate: translate3d(calc(-1 * #{$x}), $y, $z);\n    } @else {\n      @if $extra == null {\n        $extra: $transform;\n      } @else {\n        $extra: $extra $transform;\n      }\n    }\n  }\n\n  @if $x == '0' or $x == null {\n    @include multi-dir() {\n      transform: $ltr-translate $extra;\n    }\n  } @else {\n    @include ltr() {\n      transform: $ltr-translate $extra;\n    }\n\n    @include rtl() {\n      transform: $rtl-translate $extra;\n    }\n  }\n}\n", "@import \"../themes/ionic.globals\";\n@import \"../themes/ionic.mixins\";\n\n// Display\n// --------------------------------------------------\n// Modifies display of a particular element based on the given classes\n\n.ion-hide {\n  display: none !important;\n}\n\n// Adds hidden classes\n@each $breakpoint in map-keys($screen-breakpoints) {\n  $infix: breakpoint-infix($breakpoint, $screen-breakpoints);\n\n  @include media-breakpoint-up($breakpoint, $screen-breakpoints) {\n    // Provide `ion-hide-{bp}-up` classes for hiding the element based\n    // on the breakpoint\n    .ion-hide#{$infix}-up {\n      display: none !important;\n    }\n  }\n\n  @include media-breakpoint-down($breakpoint, $screen-breakpoints) {\n    // Provide `ion-hide-{bp}-down` classes for hiding the element based\n    // on the breakpoint\n    .ion-hide#{$infix}-down {\n      display: none !important;\n    }\n  }\n}\n", "\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n@mixin tablet-viewport() {\n  @media screen and (min-width: 768px) {\n    @content;\n  }\n}\n\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n@mixin mobile-viewport() {\n  @media screen and (max-width: 767px) {\n    @content;\n  }\n}\n\n@mixin input-cover() {\n  @include position(0, null, null, 0);\n  @include margin(0);\n\n  position: absolute;\n\n  width: 100%;\n  height: 100%;\n\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n\n  appearance: none;\n  outline: none;\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n@mixin visually-hidden() {\n  position: absolute;\n\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  width: 100%;\n  height: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n\n  opacity: 0;\n  overflow: hidden;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n@mixin text-inherit() {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n}\n\n@mixin button-state() {\n  @include position(0, 0, 0, 0);\n\n  position: absolute;\n\n  content: \"\";\n\n  opacity: 0;\n}\n\n// Font smoothing\n// --------------------------------------------------\n\n@mixin font-smoothing() {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n// Get the key from a map based on the index\n@function index-to-key($map, $index) {\n  $keys: map-keys($map);\n\n  @return nth($keys, $index);\n}\n\n\n// Breakpoint Mixins\n// ---------------------------------------------------------------------------------\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$screen-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// ---------------------------------------------------------------------------------\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $screen-breakpoints) {\n  $min: map-get($breakpoints, $name);\n\n  @return if($name != index-to-key($breakpoints, 1), $min, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $screen-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $screen-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $screen-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Maximum breakpoint width. Null for the smallest (first) breakpoint.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n//\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\t// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\t// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $screen-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $screen-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n\n// Text Direction - ltr / rtl\n//\n// CSS defaults to use the ltr css, and adds [dir=rtl] selectors\n// to override ltr defaults.\n// ----------------------------------------------------------\n\n@mixin multi-dir() {\n  @content;\n\n  // $root: #{&};\n  // @at-root [dir] {\n  //   #{$root} {\n  //     @content;\n  //   }\n  // }\n}\n\n@mixin rtl() {\n  $root: #{&};\n\n  $rootSplit: str-split($root, \",\");\n  $selectors: #{add-root-selector($root, \"[dir=rtl]\")};\n  $selectorsSplit: str-split($selectors, \",\");\n\n  $hostContextSelectors: ();\n  $restSelectors: ();\n  $dirSelectors: ();\n\n  // Selectors must be split into individual selectors in case the browser\n  // doesn't support a specific selector.\n  // For example, Firefox and Safari doesn't support `:host-context()`.\n  // If an invalid selector is used, then the entire group of selectors\n  // will be ignored.\n  // @link https://www.w3.org/TR/selectors-3/#grouping\n  @each $selector in $selectorsSplit {\n    // Group the selectors back into a single selector to optimize the output.\n    @if str-index($selector, \":host-context\") {\n      $hostContextSelectors: append($hostContextSelectors, $selector, comma);\n    } @else {\n      // Group the selectors back into a single selector to optimize the output.\n      $restSelectors: append($restSelectors, $selector, comma);\n    }\n  }\n\n  // Supported by Chrome.\n  @if length($hostContextSelectors) > 0 {\n    @at-root #{$hostContextSelectors} {\n      @content;\n    }\n  }\n\n  // Supported by all browsers.\n  @if length($restSelectors) > 0 {\n    @at-root #{$restSelectors} {\n      @content;\n    }\n  }\n\n  // If browser can support `:dir()`, then add the `:dir()` selectors.\n  @supports selector(:dir(rtl)) {\n    // Adding :dir() in case the browser doesn't support `:host-context()` and does support `:dir()`.\n    // `:host-context()` is added:\n    // - through the `add-root-selector()` function.\n    // - first so that it takes precedence over `:dir()`.\n    // For example,\n    // - Firefox doesn't support `:host-context()`, but does support `:dir()`.\n    // - Safari doesn't support `:host-context()`, but Safari 16.4+ supports `:dir()`\n    // @link https://webkit.org/blog/13966/webkit-features-in-safari-16-4/\n    // -- However, there is a Webkit bug on v16 that prevents `:dir()` from working when\n    // -- the app direction is changed dynamically. v17+ works fine.\n    // -- @link https://bugs.webkit.org/show_bug.cgi?id=257133\n\n    // Supported by Firefox.\n    @at-root #{add-root-selector($root, \":dir(rtl)\", false)} {\n      @content;\n    }\n  }\n}\n\n@mixin ltr() {\n  @content;\n}\n\n\n// SVG Background Image Mixin\n// @param {string} $svg\n// ----------------------------------------------------------\n@mixin svg-background-image($svg, $flip-rtl: false) {\n  $url: url-encode($svg);\n  $viewBox: str-split(str-extract($svg, \"viewBox='\", \"'\"), \" \");\n\n  @if $flip-rtl != true or $viewBox == null {\n    @include multi-dir() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n  } @else {\n    $transform: \"transform='translate(#{nth($viewBox, 3)}, 0) scale(-1, 1)'\";\n    $flipped-url: $svg;\n    $flipped-url: str-replace($flipped-url, \"<path\", \"<path #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<line\", \"<line #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<polygon\", \"<polygon #{$transform}\");\n    $flipped-url: url-encode($flipped-url);\n\n    @include ltr () {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n    @include rtl() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$flipped-url}\");\n    }\n  }\n}\n\n// Add property horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin property-horizontal($prop, $start, $end: $start) {\n  @if $start == 0 and $end == 0 {\n    #{$prop}-left: $start;\n    #{$prop}-right: $end;\n\n  } @else {\n    -webkit-#{$prop}-start: $start;\n    #{$prop}-inline-start: $start;\n    -webkit-#{$prop}-end: $end;\n    #{$prop}-inline-end: $end;\n  }\n}\n\n// Add property for all directions\n// @param {string} $prop\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// @param {boolean} $content include content or use default\n// ----------------------------------------------------------\n@mixin property($prop, $top, $end: $top, $bottom: $top, $start: $end) {\n  @include property-horizontal($prop, $start, $end);\n  #{$prop}-top: $top;\n  #{$prop}-bottom: $bottom;\n}\n\n// Add padding horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin padding-horizontal($start, $end: $start) {\n  @include property-horizontal(padding, $start, $end);\n}\n\n// Add padding for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin padding($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(padding, $top, $end, $bottom, $start);\n}\n\n// Add margin horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin margin-horizontal($start, $end: $start) {\n  @include property-horizontal(margin, $start, $end);\n}\n\n// Add margin for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin margin($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(margin, $top, $end, $bottom, $start);\n}\n\n// Add position horizontal\n// @param {string} $start - amount to position start\n// @param {string} $end - amount to left: 0; end\n// ----------------------------------------------------------\n@mixin position-horizontal($start: null, $end: null) {\n  @if $start == $end {\n    @include multi-dir() {\n      left: $start;\n      right: $end;\n    }\n  } @else {\n    @at-root {\n      & {\n        inset-inline-start: $start;\n        inset-inline-end: $end;\n      }\n    }\n  }\n}\n\n// Add position for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin position($top: null, $end: null, $bottom: null, $start: null) {\n  @include position-horizontal($start, $end);\n  top: $top;\n  bottom: $bottom;\n}\n\n// Add border for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin border($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(border, $top, $end, $bottom, $start);\n}\n\n// Add border radius for all directions\n// @param {string} $top-start\n// @param {string} $top-end\n// @param {string} $bottom-end\n// @param {string} $bottom-start\n// ----------------------------------------------------------\n@mixin border-radius($top-start, $top-end: $top-start, $bottom-end: $top-start, $bottom-start: $top-end) {\n  @if $top-start == $top-end and $top-start == $bottom-end and $top-start == $bottom-start {\n    border-radius: $top-start;\n  } @else {\n    border-start-start-radius: $top-start;\n    border-start-end-radius: $top-end;\n    border-end-end-radius: $bottom-end;\n    border-end-start-radius: $bottom-start;\n  }\n}\n\n// Add direction for all directions\n// @param {string} $dir - Direction on LTR\n@mixin direction($dir) {\n  $other-dir: null;\n\n  @if $dir == ltr {\n    $other-dir: rtl;\n  } @else {\n    $other-dir: ltr;\n  }\n\n  @include ltr() {\n    direction: $dir;\n  }\n  @include rtl() {\n    direction: $other-dir;\n  }\n}\n\n// Add float for all directions\n// @param {string} $side\n// @param {string} $decorator - !important\n@mixin float($side, $decorator: null) {\n  @if $side == start {\n    @include ltr() {\n      float: left $decorator;\n    }\n    @include rtl() {\n      float: right $decorator;\n    }\n  } @else if $side == end {\n    @include ltr() {\n      float: right $decorator;\n    }\n    @include rtl() {\n      float: left $decorator;\n    }\n  } @else {\n    @include multi-dir() {\n      float: $side $decorator;\n    }\n  }\n}\n\n@mixin background-position($horizontal, $horizontal-amount: null, $vertical: null, $vertical-amount: null) {\n  @if $horizontal == start or $horizontal == end {\n    $horizontal-ltr: null;\n    $horizontal-rtl: null;\n    @if $horizontal == start {\n      $horizontal-ltr: left;\n      $horizontal-rtl: right;\n    } @else {\n      $horizontal-ltr: right;\n      $horizontal-rtl: left;\n    }\n\n    @include ltr() {\n      background-position: $horizontal-ltr $horizontal-amount $vertical $vertical-amount;\n    }\n    @include rtl() {\n      background-position: $horizontal-rtl $horizontal-amount $vertical $vertical-amount;\n    }\n  } @else {\n    @include multi-dir() {\n      background-position: $horizontal $horizontal-amount $vertical $vertical-amount;\n    }\n  }\n}\n\n@mixin transform-origin($x-axis, $y-axis: null) {\n  @if $x-axis == start {\n    @include ltr() {\n      transform-origin: left $y-axis;\n    }\n    @include rtl() {\n      transform-origin: right $y-axis;\n    }\n  } @else if $x-axis == end {\n    @include ltr() {\n      transform-origin: right $y-axis;\n    }\n    @include rtl() {\n      transform-origin: left $y-axis;\n    }\n  } @else if $x-axis == left or $x-axis == right {\n    @include multi-dir() {\n      transform-origin: $x-axis $y-axis;\n    }\n  } @else {\n    @include ltr() {\n      transform-origin: $x-axis $y-axis;\n    }\n    @include rtl() {\n      transform-origin: calc(100% - #{$x-axis}) $y-axis;\n    }\n  }\n}\n\n// Add transform for all directions\n// @param {string} $transforms - comma separated list of transforms\n@mixin transform($transforms...) {\n  $extra: null;\n\n  $x: null;\n  $ltr-translate: null;\n  $rtl-translate: null;\n\n  @each $transform in $transforms {\n    @if (str-index($transform, translate3d)) {\n      $transform: str-replace($transform, 'translate3d(');\n      $transform: str-replace($transform, ')');\n\n      $coordinates: str-split($transform, ',');\n\n      $x: nth($coordinates, 1);\n      $y: nth($coordinates, 2);\n      $z: nth($coordinates, 3);\n\n      $ltr-translate: translate3d($x, $y, $z);\n      $rtl-translate: translate3d(calc(-1 * #{$x}), $y, $z);\n    } @else {\n      @if $extra == null {\n        $extra: $transform;\n      } @else {\n        $extra: $extra $transform;\n      }\n    }\n  }\n\n  @if $x == '0' or $x == null {\n    @include multi-dir() {\n      transform: $ltr-translate $extra;\n    }\n  } @else {\n    @include ltr() {\n      transform: $ltr-translate $extra;\n    }\n\n    @include rtl() {\n      transform: $rtl-translate $extra;\n    }\n  }\n}\n", "@import \"../themes/ionic.globals\";\n@import \"../themes/ionic.mixins\";\n\n\n// Element Space\n// --------------------------------------------------\n// Creates padding and margin attributes to be used on\n// any element\n\n$padding: var(--ion-padding, 16px);\n$margin: var(--ion-margin, 16px);\n\n// Padding\n// --------------------------------------------------\n\n.ion-no-padding {\n  --padding-start: 0;\n  --padding-end: 0;\n  --padding-top: 0;\n  --padding-bottom: 0;\n\n  @include padding(0);\n}\n\n.ion-padding {\n  --padding-start: #{$padding};\n  --padding-end: #{$padding};\n  --padding-top: #{$padding};\n  --padding-bottom: #{$padding};\n\n  @include padding($padding);\n}\n\n.ion-padding-top {\n  --padding-top: #{$padding};\n\n  @include padding($padding, null, null, null);\n}\n\n.ion-padding-start {\n  --padding-start: #{$padding};\n\n  @include padding-horizontal($padding, null);\n}\n\n.ion-padding-end {\n  --padding-end: #{$padding};\n\n  @include padding-horizontal(null, $padding);\n}\n\n.ion-padding-bottom {\n  --padding-bottom: #{$padding};\n\n  @include padding(null, null, $padding, null);\n}\n\n.ion-padding-vertical {\n  --padding-top: #{$padding};\n  --padding-bottom: #{$padding};\n\n  @include padding($padding, null, $padding, null);\n}\n\n.ion-padding-horizontal {\n  --padding-start: #{$padding};\n  --padding-end: #{$padding};\n\n  @include padding-horizontal($padding);\n}\n\n\n// Margin\n// --------------------------------------------------\n\n.ion-no-margin {\n  --margin-start: 0;\n  --margin-end: 0;\n  --margin-top: 0;\n  --margin-bottom: 0;\n\n  @include margin(0);\n}\n\n.ion-margin {\n  --margin-start: #{$margin};\n  --margin-end: #{$margin};\n  --margin-top: #{$margin};\n  --margin-bottom: #{$margin};\n\n  @include margin($margin);\n}\n\n.ion-margin-top {\n  --margin-top: #{$margin};\n\n  @include margin($margin, null, null, null);\n}\n\n.ion-margin-start {\n  --margin-start: #{$margin};\n\n  @include margin-horizontal($margin, null);\n}\n\n.ion-margin-end {\n  --margin-end: #{$margin};\n\n  @include margin-horizontal(null, $margin);\n}\n\n.ion-margin-bottom {\n  --margin-bottom: #{$margin};\n\n  @include margin(null, null, $margin, null);\n}\n\n.ion-margin-vertical {\n  --margin-top: #{$margin};\n  --margin-bottom: #{$margin};\n\n  @include margin($margin, null, $margin, null);\n}\n\n.ion-margin-horizontal {\n  --margin-start: #{$margin};\n  --margin-end: #{$margin};\n\n  @include margin-horizontal($margin);\n}\n", "\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n@mixin tablet-viewport() {\n  @media screen and (min-width: 768px) {\n    @content;\n  }\n}\n\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n@mixin mobile-viewport() {\n  @media screen and (max-width: 767px) {\n    @content;\n  }\n}\n\n@mixin input-cover() {\n  @include position(0, null, null, 0);\n  @include margin(0);\n\n  position: absolute;\n\n  width: 100%;\n  height: 100%;\n\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n\n  appearance: none;\n  outline: none;\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n@mixin visually-hidden() {\n  position: absolute;\n\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  width: 100%;\n  height: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n\n  opacity: 0;\n  overflow: hidden;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n@mixin text-inherit() {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n}\n\n@mixin button-state() {\n  @include position(0, 0, 0, 0);\n\n  position: absolute;\n\n  content: \"\";\n\n  opacity: 0;\n}\n\n// Font smoothing\n// --------------------------------------------------\n\n@mixin font-smoothing() {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n// Get the key from a map based on the index\n@function index-to-key($map, $index) {\n  $keys: map-keys($map);\n\n  @return nth($keys, $index);\n}\n\n\n// Breakpoint Mixins\n// ---------------------------------------------------------------------------------\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$screen-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// ---------------------------------------------------------------------------------\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $screen-breakpoints) {\n  $min: map-get($breakpoints, $name);\n\n  @return if($name != index-to-key($breakpoints, 1), $min, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $screen-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $screen-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $screen-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Maximum breakpoint width. Null for the smallest (first) breakpoint.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n//\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\t// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\t// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $screen-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $screen-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n\n// Text Direction - ltr / rtl\n//\n// CSS defaults to use the ltr css, and adds [dir=rtl] selectors\n// to override ltr defaults.\n// ----------------------------------------------------------\n\n@mixin multi-dir() {\n  @content;\n\n  // $root: #{&};\n  // @at-root [dir] {\n  //   #{$root} {\n  //     @content;\n  //   }\n  // }\n}\n\n@mixin rtl() {\n  $root: #{&};\n\n  $rootSplit: str-split($root, \",\");\n  $selectors: #{add-root-selector($root, \"[dir=rtl]\")};\n  $selectorsSplit: str-split($selectors, \",\");\n\n  $hostContextSelectors: ();\n  $restSelectors: ();\n  $dirSelectors: ();\n\n  // Selectors must be split into individual selectors in case the browser\n  // doesn't support a specific selector.\n  // For example, Firefox and Safari doesn't support `:host-context()`.\n  // If an invalid selector is used, then the entire group of selectors\n  // will be ignored.\n  // @link https://www.w3.org/TR/selectors-3/#grouping\n  @each $selector in $selectorsSplit {\n    // Group the selectors back into a single selector to optimize the output.\n    @if str-index($selector, \":host-context\") {\n      $hostContextSelectors: append($hostContextSelectors, $selector, comma);\n    } @else {\n      // Group the selectors back into a single selector to optimize the output.\n      $restSelectors: append($restSelectors, $selector, comma);\n    }\n  }\n\n  // Supported by Chrome.\n  @if length($hostContextSelectors) > 0 {\n    @at-root #{$hostContextSelectors} {\n      @content;\n    }\n  }\n\n  // Supported by all browsers.\n  @if length($restSelectors) > 0 {\n    @at-root #{$restSelectors} {\n      @content;\n    }\n  }\n\n  // If browser can support `:dir()`, then add the `:dir()` selectors.\n  @supports selector(:dir(rtl)) {\n    // Adding :dir() in case the browser doesn't support `:host-context()` and does support `:dir()`.\n    // `:host-context()` is added:\n    // - through the `add-root-selector()` function.\n    // - first so that it takes precedence over `:dir()`.\n    // For example,\n    // - Firefox doesn't support `:host-context()`, but does support `:dir()`.\n    // - Safari doesn't support `:host-context()`, but Safari 16.4+ supports `:dir()`\n    // @link https://webkit.org/blog/13966/webkit-features-in-safari-16-4/\n    // -- However, there is a Webkit bug on v16 that prevents `:dir()` from working when\n    // -- the app direction is changed dynamically. v17+ works fine.\n    // -- @link https://bugs.webkit.org/show_bug.cgi?id=257133\n\n    // Supported by Firefox.\n    @at-root #{add-root-selector($root, \":dir(rtl)\", false)} {\n      @content;\n    }\n  }\n}\n\n@mixin ltr() {\n  @content;\n}\n\n\n// SVG Background Image Mixin\n// @param {string} $svg\n// ----------------------------------------------------------\n@mixin svg-background-image($svg, $flip-rtl: false) {\n  $url: url-encode($svg);\n  $viewBox: str-split(str-extract($svg, \"viewBox='\", \"'\"), \" \");\n\n  @if $flip-rtl != true or $viewBox == null {\n    @include multi-dir() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n  } @else {\n    $transform: \"transform='translate(#{nth($viewBox, 3)}, 0) scale(-1, 1)'\";\n    $flipped-url: $svg;\n    $flipped-url: str-replace($flipped-url, \"<path\", \"<path #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<line\", \"<line #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<polygon\", \"<polygon #{$transform}\");\n    $flipped-url: url-encode($flipped-url);\n\n    @include ltr () {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n    @include rtl() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$flipped-url}\");\n    }\n  }\n}\n\n// Add property horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin property-horizontal($prop, $start, $end: $start) {\n  @if $start == 0 and $end == 0 {\n    #{$prop}-left: $start;\n    #{$prop}-right: $end;\n\n  } @else {\n    -webkit-#{$prop}-start: $start;\n    #{$prop}-inline-start: $start;\n    -webkit-#{$prop}-end: $end;\n    #{$prop}-inline-end: $end;\n  }\n}\n\n// Add property for all directions\n// @param {string} $prop\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// @param {boolean} $content include content or use default\n// ----------------------------------------------------------\n@mixin property($prop, $top, $end: $top, $bottom: $top, $start: $end) {\n  @include property-horizontal($prop, $start, $end);\n  #{$prop}-top: $top;\n  #{$prop}-bottom: $bottom;\n}\n\n// Add padding horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin padding-horizontal($start, $end: $start) {\n  @include property-horizontal(padding, $start, $end);\n}\n\n// Add padding for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin padding($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(padding, $top, $end, $bottom, $start);\n}\n\n// Add margin horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin margin-horizontal($start, $end: $start) {\n  @include property-horizontal(margin, $start, $end);\n}\n\n// Add margin for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin margin($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(margin, $top, $end, $bottom, $start);\n}\n\n// Add position horizontal\n// @param {string} $start - amount to position start\n// @param {string} $end - amount to left: 0; end\n// ----------------------------------------------------------\n@mixin position-horizontal($start: null, $end: null) {\n  @if $start == $end {\n    @include multi-dir() {\n      left: $start;\n      right: $end;\n    }\n  } @else {\n    @at-root {\n      & {\n        inset-inline-start: $start;\n        inset-inline-end: $end;\n      }\n    }\n  }\n}\n\n// Add position for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin position($top: null, $end: null, $bottom: null, $start: null) {\n  @include position-horizontal($start, $end);\n  top: $top;\n  bottom: $bottom;\n}\n\n// Add border for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin border($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(border, $top, $end, $bottom, $start);\n}\n\n// Add border radius for all directions\n// @param {string} $top-start\n// @param {string} $top-end\n// @param {string} $bottom-end\n// @param {string} $bottom-start\n// ----------------------------------------------------------\n@mixin border-radius($top-start, $top-end: $top-start, $bottom-end: $top-start, $bottom-start: $top-end) {\n  @if $top-start == $top-end and $top-start == $bottom-end and $top-start == $bottom-start {\n    border-radius: $top-start;\n  } @else {\n    border-start-start-radius: $top-start;\n    border-start-end-radius: $top-end;\n    border-end-end-radius: $bottom-end;\n    border-end-start-radius: $bottom-start;\n  }\n}\n\n// Add direction for all directions\n// @param {string} $dir - Direction on LTR\n@mixin direction($dir) {\n  $other-dir: null;\n\n  @if $dir == ltr {\n    $other-dir: rtl;\n  } @else {\n    $other-dir: ltr;\n  }\n\n  @include ltr() {\n    direction: $dir;\n  }\n  @include rtl() {\n    direction: $other-dir;\n  }\n}\n\n// Add float for all directions\n// @param {string} $side\n// @param {string} $decorator - !important\n@mixin float($side, $decorator: null) {\n  @if $side == start {\n    @include ltr() {\n      float: left $decorator;\n    }\n    @include rtl() {\n      float: right $decorator;\n    }\n  } @else if $side == end {\n    @include ltr() {\n      float: right $decorator;\n    }\n    @include rtl() {\n      float: left $decorator;\n    }\n  } @else {\n    @include multi-dir() {\n      float: $side $decorator;\n    }\n  }\n}\n\n@mixin background-position($horizontal, $horizontal-amount: null, $vertical: null, $vertical-amount: null) {\n  @if $horizontal == start or $horizontal == end {\n    $horizontal-ltr: null;\n    $horizontal-rtl: null;\n    @if $horizontal == start {\n      $horizontal-ltr: left;\n      $horizontal-rtl: right;\n    } @else {\n      $horizontal-ltr: right;\n      $horizontal-rtl: left;\n    }\n\n    @include ltr() {\n      background-position: $horizontal-ltr $horizontal-amount $vertical $vertical-amount;\n    }\n    @include rtl() {\n      background-position: $horizontal-rtl $horizontal-amount $vertical $vertical-amount;\n    }\n  } @else {\n    @include multi-dir() {\n      background-position: $horizontal $horizontal-amount $vertical $vertical-amount;\n    }\n  }\n}\n\n@mixin transform-origin($x-axis, $y-axis: null) {\n  @if $x-axis == start {\n    @include ltr() {\n      transform-origin: left $y-axis;\n    }\n    @include rtl() {\n      transform-origin: right $y-axis;\n    }\n  } @else if $x-axis == end {\n    @include ltr() {\n      transform-origin: right $y-axis;\n    }\n    @include rtl() {\n      transform-origin: left $y-axis;\n    }\n  } @else if $x-axis == left or $x-axis == right {\n    @include multi-dir() {\n      transform-origin: $x-axis $y-axis;\n    }\n  } @else {\n    @include ltr() {\n      transform-origin: $x-axis $y-axis;\n    }\n    @include rtl() {\n      transform-origin: calc(100% - #{$x-axis}) $y-axis;\n    }\n  }\n}\n\n// Add transform for all directions\n// @param {string} $transforms - comma separated list of transforms\n@mixin transform($transforms...) {\n  $extra: null;\n\n  $x: null;\n  $ltr-translate: null;\n  $rtl-translate: null;\n\n  @each $transform in $transforms {\n    @if (str-index($transform, translate3d)) {\n      $transform: str-replace($transform, 'translate3d(');\n      $transform: str-replace($transform, ')');\n\n      $coordinates: str-split($transform, ',');\n\n      $x: nth($coordinates, 1);\n      $y: nth($coordinates, 2);\n      $z: nth($coordinates, 3);\n\n      $ltr-translate: translate3d($x, $y, $z);\n      $rtl-translate: translate3d(calc(-1 * #{$x}), $y, $z);\n    } @else {\n      @if $extra == null {\n        $extra: $transform;\n      } @else {\n        $extra: $extra $transform;\n      }\n    }\n  }\n\n  @if $x == '0' or $x == null {\n    @include multi-dir() {\n      transform: $ltr-translate $extra;\n    }\n  } @else {\n    @include ltr() {\n      transform: $ltr-translate $extra;\n    }\n\n    @include rtl() {\n      transform: $rtl-translate $extra;\n    }\n  }\n}\n", "@import \"../themes/ionic.globals\";\n@import \"../themes/ionic.mixins\";\n\n// Float Elements\n// --------------------------------------------------\n// Creates float classes based on screen size\n\n@each $breakpoint in map-keys($screen-breakpoints) {\n  $infix: breakpoint-infix($breakpoint, $screen-breakpoints);\n\n  @include media-breakpoint-up($breakpoint, $screen-breakpoints) {\n    // Provide `.ion-float-{bp}-{side}` classes for floating the element based\n    // on the breakpoint and side\n    .ion-float#{$infix}-left {\n      @include float(left, !important);\n    }\n\n    .ion-float#{$infix}-right {\n      @include float(right, !important);\n    }\n\n    .ion-float#{$infix}-start {\n      @include float(start, !important);\n    }\n\n    .ion-float#{$infix}-end {\n      @include float(end, !important);\n    }\n  }\n}\n", "\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n@mixin tablet-viewport() {\n  @media screen and (min-width: 768px) {\n    @content;\n  }\n}\n\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n@mixin mobile-viewport() {\n  @media screen and (max-width: 767px) {\n    @content;\n  }\n}\n\n@mixin input-cover() {\n  @include position(0, null, null, 0);\n  @include margin(0);\n\n  position: absolute;\n\n  width: 100%;\n  height: 100%;\n\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n\n  appearance: none;\n  outline: none;\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n@mixin visually-hidden() {\n  position: absolute;\n\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  width: 100%;\n  height: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n\n  opacity: 0;\n  overflow: hidden;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n@mixin text-inherit() {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n}\n\n@mixin button-state() {\n  @include position(0, 0, 0, 0);\n\n  position: absolute;\n\n  content: \"\";\n\n  opacity: 0;\n}\n\n// Font smoothing\n// --------------------------------------------------\n\n@mixin font-smoothing() {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n// Get the key from a map based on the index\n@function index-to-key($map, $index) {\n  $keys: map-keys($map);\n\n  @return nth($keys, $index);\n}\n\n\n// Breakpoint Mixins\n// ---------------------------------------------------------------------------------\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$screen-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// ---------------------------------------------------------------------------------\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $screen-breakpoints) {\n  $min: map-get($breakpoints, $name);\n\n  @return if($name != index-to-key($breakpoints, 1), $min, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $screen-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $screen-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $screen-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Maximum breakpoint width. Null for the smallest (first) breakpoint.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n//\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\t// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\t// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $screen-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $screen-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n\n// Text Direction - ltr / rtl\n//\n// CSS defaults to use the ltr css, and adds [dir=rtl] selectors\n// to override ltr defaults.\n// ----------------------------------------------------------\n\n@mixin multi-dir() {\n  @content;\n\n  // $root: #{&};\n  // @at-root [dir] {\n  //   #{$root} {\n  //     @content;\n  //   }\n  // }\n}\n\n@mixin rtl() {\n  $root: #{&};\n\n  $rootSplit: str-split($root, \",\");\n  $selectors: #{add-root-selector($root, \"[dir=rtl]\")};\n  $selectorsSplit: str-split($selectors, \",\");\n\n  $hostContextSelectors: ();\n  $restSelectors: ();\n  $dirSelectors: ();\n\n  // Selectors must be split into individual selectors in case the browser\n  // doesn't support a specific selector.\n  // For example, Firefox and Safari doesn't support `:host-context()`.\n  // If an invalid selector is used, then the entire group of selectors\n  // will be ignored.\n  // @link https://www.w3.org/TR/selectors-3/#grouping\n  @each $selector in $selectorsSplit {\n    // Group the selectors back into a single selector to optimize the output.\n    @if str-index($selector, \":host-context\") {\n      $hostContextSelectors: append($hostContextSelectors, $selector, comma);\n    } @else {\n      // Group the selectors back into a single selector to optimize the output.\n      $restSelectors: append($restSelectors, $selector, comma);\n    }\n  }\n\n  // Supported by Chrome.\n  @if length($hostContextSelectors) > 0 {\n    @at-root #{$hostContextSelectors} {\n      @content;\n    }\n  }\n\n  // Supported by all browsers.\n  @if length($restSelectors) > 0 {\n    @at-root #{$restSelectors} {\n      @content;\n    }\n  }\n\n  // If browser can support `:dir()`, then add the `:dir()` selectors.\n  @supports selector(:dir(rtl)) {\n    // Adding :dir() in case the browser doesn't support `:host-context()` and does support `:dir()`.\n    // `:host-context()` is added:\n    // - through the `add-root-selector()` function.\n    // - first so that it takes precedence over `:dir()`.\n    // For example,\n    // - Firefox doesn't support `:host-context()`, but does support `:dir()`.\n    // - Safari doesn't support `:host-context()`, but Safari 16.4+ supports `:dir()`\n    // @link https://webkit.org/blog/13966/webkit-features-in-safari-16-4/\n    // -- However, there is a Webkit bug on v16 that prevents `:dir()` from working when\n    // -- the app direction is changed dynamically. v17+ works fine.\n    // -- @link https://bugs.webkit.org/show_bug.cgi?id=257133\n\n    // Supported by Firefox.\n    @at-root #{add-root-selector($root, \":dir(rtl)\", false)} {\n      @content;\n    }\n  }\n}\n\n@mixin ltr() {\n  @content;\n}\n\n\n// SVG Background Image Mixin\n// @param {string} $svg\n// ----------------------------------------------------------\n@mixin svg-background-image($svg, $flip-rtl: false) {\n  $url: url-encode($svg);\n  $viewBox: str-split(str-extract($svg, \"viewBox='\", \"'\"), \" \");\n\n  @if $flip-rtl != true or $viewBox == null {\n    @include multi-dir() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n  } @else {\n    $transform: \"transform='translate(#{nth($viewBox, 3)}, 0) scale(-1, 1)'\";\n    $flipped-url: $svg;\n    $flipped-url: str-replace($flipped-url, \"<path\", \"<path #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<line\", \"<line #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<polygon\", \"<polygon #{$transform}\");\n    $flipped-url: url-encode($flipped-url);\n\n    @include ltr () {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n    @include rtl() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$flipped-url}\");\n    }\n  }\n}\n\n// Add property horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin property-horizontal($prop, $start, $end: $start) {\n  @if $start == 0 and $end == 0 {\n    #{$prop}-left: $start;\n    #{$prop}-right: $end;\n\n  } @else {\n    -webkit-#{$prop}-start: $start;\n    #{$prop}-inline-start: $start;\n    -webkit-#{$prop}-end: $end;\n    #{$prop}-inline-end: $end;\n  }\n}\n\n// Add property for all directions\n// @param {string} $prop\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// @param {boolean} $content include content or use default\n// ----------------------------------------------------------\n@mixin property($prop, $top, $end: $top, $bottom: $top, $start: $end) {\n  @include property-horizontal($prop, $start, $end);\n  #{$prop}-top: $top;\n  #{$prop}-bottom: $bottom;\n}\n\n// Add padding horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin padding-horizontal($start, $end: $start) {\n  @include property-horizontal(padding, $start, $end);\n}\n\n// Add padding for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin padding($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(padding, $top, $end, $bottom, $start);\n}\n\n// Add margin horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin margin-horizontal($start, $end: $start) {\n  @include property-horizontal(margin, $start, $end);\n}\n\n// Add margin for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin margin($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(margin, $top, $end, $bottom, $start);\n}\n\n// Add position horizontal\n// @param {string} $start - amount to position start\n// @param {string} $end - amount to left: 0; end\n// ----------------------------------------------------------\n@mixin position-horizontal($start: null, $end: null) {\n  @if $start == $end {\n    @include multi-dir() {\n      left: $start;\n      right: $end;\n    }\n  } @else {\n    @at-root {\n      & {\n        inset-inline-start: $start;\n        inset-inline-end: $end;\n      }\n    }\n  }\n}\n\n// Add position for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin position($top: null, $end: null, $bottom: null, $start: null) {\n  @include position-horizontal($start, $end);\n  top: $top;\n  bottom: $bottom;\n}\n\n// Add border for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin border($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(border, $top, $end, $bottom, $start);\n}\n\n// Add border radius for all directions\n// @param {string} $top-start\n// @param {string} $top-end\n// @param {string} $bottom-end\n// @param {string} $bottom-start\n// ----------------------------------------------------------\n@mixin border-radius($top-start, $top-end: $top-start, $bottom-end: $top-start, $bottom-start: $top-end) {\n  @if $top-start == $top-end and $top-start == $bottom-end and $top-start == $bottom-start {\n    border-radius: $top-start;\n  } @else {\n    border-start-start-radius: $top-start;\n    border-start-end-radius: $top-end;\n    border-end-end-radius: $bottom-end;\n    border-end-start-radius: $bottom-start;\n  }\n}\n\n// Add direction for all directions\n// @param {string} $dir - Direction on LTR\n@mixin direction($dir) {\n  $other-dir: null;\n\n  @if $dir == ltr {\n    $other-dir: rtl;\n  } @else {\n    $other-dir: ltr;\n  }\n\n  @include ltr() {\n    direction: $dir;\n  }\n  @include rtl() {\n    direction: $other-dir;\n  }\n}\n\n// Add float for all directions\n// @param {string} $side\n// @param {string} $decorator - !important\n@mixin float($side, $decorator: null) {\n  @if $side == start {\n    @include ltr() {\n      float: left $decorator;\n    }\n    @include rtl() {\n      float: right $decorator;\n    }\n  } @else if $side == end {\n    @include ltr() {\n      float: right $decorator;\n    }\n    @include rtl() {\n      float: left $decorator;\n    }\n  } @else {\n    @include multi-dir() {\n      float: $side $decorator;\n    }\n  }\n}\n\n@mixin background-position($horizontal, $horizontal-amount: null, $vertical: null, $vertical-amount: null) {\n  @if $horizontal == start or $horizontal == end {\n    $horizontal-ltr: null;\n    $horizontal-rtl: null;\n    @if $horizontal == start {\n      $horizontal-ltr: left;\n      $horizontal-rtl: right;\n    } @else {\n      $horizontal-ltr: right;\n      $horizontal-rtl: left;\n    }\n\n    @include ltr() {\n      background-position: $horizontal-ltr $horizontal-amount $vertical $vertical-amount;\n    }\n    @include rtl() {\n      background-position: $horizontal-rtl $horizontal-amount $vertical $vertical-amount;\n    }\n  } @else {\n    @include multi-dir() {\n      background-position: $horizontal $horizontal-amount $vertical $vertical-amount;\n    }\n  }\n}\n\n@mixin transform-origin($x-axis, $y-axis: null) {\n  @if $x-axis == start {\n    @include ltr() {\n      transform-origin: left $y-axis;\n    }\n    @include rtl() {\n      transform-origin: right $y-axis;\n    }\n  } @else if $x-axis == end {\n    @include ltr() {\n      transform-origin: right $y-axis;\n    }\n    @include rtl() {\n      transform-origin: left $y-axis;\n    }\n  } @else if $x-axis == left or $x-axis == right {\n    @include multi-dir() {\n      transform-origin: $x-axis $y-axis;\n    }\n  } @else {\n    @include ltr() {\n      transform-origin: $x-axis $y-axis;\n    }\n    @include rtl() {\n      transform-origin: calc(100% - #{$x-axis}) $y-axis;\n    }\n  }\n}\n\n// Add transform for all directions\n// @param {string} $transforms - comma separated list of transforms\n@mixin transform($transforms...) {\n  $extra: null;\n\n  $x: null;\n  $ltr-translate: null;\n  $rtl-translate: null;\n\n  @each $transform in $transforms {\n    @if (str-index($transform, translate3d)) {\n      $transform: str-replace($transform, 'translate3d(');\n      $transform: str-replace($transform, ')');\n\n      $coordinates: str-split($transform, ',');\n\n      $x: nth($coordinates, 1);\n      $y: nth($coordinates, 2);\n      $z: nth($coordinates, 3);\n\n      $ltr-translate: translate3d($x, $y, $z);\n      $rtl-translate: translate3d(calc(-1 * #{$x}), $y, $z);\n    } @else {\n      @if $extra == null {\n        $extra: $transform;\n      } @else {\n        $extra: $extra $transform;\n      }\n    }\n  }\n\n  @if $x == '0' or $x == null {\n    @include multi-dir() {\n      transform: $ltr-translate $extra;\n    }\n  } @else {\n    @include ltr() {\n      transform: $ltr-translate $extra;\n    }\n\n    @include rtl() {\n      transform: $rtl-translate $extra;\n    }\n  }\n}\n", "@import \"../themes/ionic.globals\";\n@import \"../themes/ionic.mixins\";\n\n// Text Alignment\n// --------------------------------------------------\n// Creates text alignment attributes based on screen size\n\n@each $breakpoint in map-keys($screen-breakpoints) {\n  $infix: breakpoint-infix($breakpoint, $screen-breakpoints);\n\n  @include media-breakpoint-up($breakpoint, $screen-breakpoints) {\n    // Provide `.ion-text-{bp}` classes for aligning the text based\n    // on the breakpoint\n    .ion-text#{$infix}-center {\n      text-align: center !important;\n    }\n\n    .ion-text#{$infix}-justify {\n      text-align: justify !important;\n    }\n\n    .ion-text#{$infix}-start {\n      text-align: start !important;\n    }\n\n    .ion-text#{$infix}-end {\n      text-align: end !important;\n    }\n\n    .ion-text#{$infix}-left {\n      text-align: left !important;\n    }\n\n    .ion-text#{$infix}-right {\n      text-align: right !important;\n    }\n\n    .ion-text#{$infix}-nowrap {\n      white-space: nowrap !important;\n    }\n\n    .ion-text#{$infix}-wrap {\n      white-space: normal !important;\n    }\n  }\n}\n", "\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n@mixin tablet-viewport() {\n  @media screen and (min-width: 768px) {\n    @content;\n  }\n}\n\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n@mixin mobile-viewport() {\n  @media screen and (max-width: 767px) {\n    @content;\n  }\n}\n\n@mixin input-cover() {\n  @include position(0, null, null, 0);\n  @include margin(0);\n\n  position: absolute;\n\n  width: 100%;\n  height: 100%;\n\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n\n  appearance: none;\n  outline: none;\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n@mixin visually-hidden() {\n  position: absolute;\n\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  width: 100%;\n  height: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n\n  opacity: 0;\n  overflow: hidden;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n@mixin text-inherit() {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n}\n\n@mixin button-state() {\n  @include position(0, 0, 0, 0);\n\n  position: absolute;\n\n  content: \"\";\n\n  opacity: 0;\n}\n\n// Font smoothing\n// --------------------------------------------------\n\n@mixin font-smoothing() {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n// Get the key from a map based on the index\n@function index-to-key($map, $index) {\n  $keys: map-keys($map);\n\n  @return nth($keys, $index);\n}\n\n\n// Breakpoint Mixins\n// ---------------------------------------------------------------------------------\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$screen-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// ---------------------------------------------------------------------------------\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $screen-breakpoints) {\n  $min: map-get($breakpoints, $name);\n\n  @return if($name != index-to-key($breakpoints, 1), $min, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $screen-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $screen-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $screen-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Maximum breakpoint width. Null for the smallest (first) breakpoint.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n//\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\t// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\t// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $screen-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $screen-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n\n// Text Direction - ltr / rtl\n//\n// CSS defaults to use the ltr css, and adds [dir=rtl] selectors\n// to override ltr defaults.\n// ----------------------------------------------------------\n\n@mixin multi-dir() {\n  @content;\n\n  // $root: #{&};\n  // @at-root [dir] {\n  //   #{$root} {\n  //     @content;\n  //   }\n  // }\n}\n\n@mixin rtl() {\n  $root: #{&};\n\n  $rootSplit: str-split($root, \",\");\n  $selectors: #{add-root-selector($root, \"[dir=rtl]\")};\n  $selectorsSplit: str-split($selectors, \",\");\n\n  $hostContextSelectors: ();\n  $restSelectors: ();\n  $dirSelectors: ();\n\n  // Selectors must be split into individual selectors in case the browser\n  // doesn't support a specific selector.\n  // For example, Firefox and Safari doesn't support `:host-context()`.\n  // If an invalid selector is used, then the entire group of selectors\n  // will be ignored.\n  // @link https://www.w3.org/TR/selectors-3/#grouping\n  @each $selector in $selectorsSplit {\n    // Group the selectors back into a single selector to optimize the output.\n    @if str-index($selector, \":host-context\") {\n      $hostContextSelectors: append($hostContextSelectors, $selector, comma);\n    } @else {\n      // Group the selectors back into a single selector to optimize the output.\n      $restSelectors: append($restSelectors, $selector, comma);\n    }\n  }\n\n  // Supported by Chrome.\n  @if length($hostContextSelectors) > 0 {\n    @at-root #{$hostContextSelectors} {\n      @content;\n    }\n  }\n\n  // Supported by all browsers.\n  @if length($restSelectors) > 0 {\n    @at-root #{$restSelectors} {\n      @content;\n    }\n  }\n\n  // If browser can support `:dir()`, then add the `:dir()` selectors.\n  @supports selector(:dir(rtl)) {\n    // Adding :dir() in case the browser doesn't support `:host-context()` and does support `:dir()`.\n    // `:host-context()` is added:\n    // - through the `add-root-selector()` function.\n    // - first so that it takes precedence over `:dir()`.\n    // For example,\n    // - Firefox doesn't support `:host-context()`, but does support `:dir()`.\n    // - Safari doesn't support `:host-context()`, but Safari 16.4+ supports `:dir()`\n    // @link https://webkit.org/blog/13966/webkit-features-in-safari-16-4/\n    // -- However, there is a Webkit bug on v16 that prevents `:dir()` from working when\n    // -- the app direction is changed dynamically. v17+ works fine.\n    // -- @link https://bugs.webkit.org/show_bug.cgi?id=257133\n\n    // Supported by Firefox.\n    @at-root #{add-root-selector($root, \":dir(rtl)\", false)} {\n      @content;\n    }\n  }\n}\n\n@mixin ltr() {\n  @content;\n}\n\n\n// SVG Background Image Mixin\n// @param {string} $svg\n// ----------------------------------------------------------\n@mixin svg-background-image($svg, $flip-rtl: false) {\n  $url: url-encode($svg);\n  $viewBox: str-split(str-extract($svg, \"viewBox='\", \"'\"), \" \");\n\n  @if $flip-rtl != true or $viewBox == null {\n    @include multi-dir() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n  } @else {\n    $transform: \"transform='translate(#{nth($viewBox, 3)}, 0) scale(-1, 1)'\";\n    $flipped-url: $svg;\n    $flipped-url: str-replace($flipped-url, \"<path\", \"<path #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<line\", \"<line #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<polygon\", \"<polygon #{$transform}\");\n    $flipped-url: url-encode($flipped-url);\n\n    @include ltr () {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n    @include rtl() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$flipped-url}\");\n    }\n  }\n}\n\n// Add property horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin property-horizontal($prop, $start, $end: $start) {\n  @if $start == 0 and $end == 0 {\n    #{$prop}-left: $start;\n    #{$prop}-right: $end;\n\n  } @else {\n    -webkit-#{$prop}-start: $start;\n    #{$prop}-inline-start: $start;\n    -webkit-#{$prop}-end: $end;\n    #{$prop}-inline-end: $end;\n  }\n}\n\n// Add property for all directions\n// @param {string} $prop\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// @param {boolean} $content include content or use default\n// ----------------------------------------------------------\n@mixin property($prop, $top, $end: $top, $bottom: $top, $start: $end) {\n  @include property-horizontal($prop, $start, $end);\n  #{$prop}-top: $top;\n  #{$prop}-bottom: $bottom;\n}\n\n// Add padding horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin padding-horizontal($start, $end: $start) {\n  @include property-horizontal(padding, $start, $end);\n}\n\n// Add padding for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin padding($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(padding, $top, $end, $bottom, $start);\n}\n\n// Add margin horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin margin-horizontal($start, $end: $start) {\n  @include property-horizontal(margin, $start, $end);\n}\n\n// Add margin for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin margin($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(margin, $top, $end, $bottom, $start);\n}\n\n// Add position horizontal\n// @param {string} $start - amount to position start\n// @param {string} $end - amount to left: 0; end\n// ----------------------------------------------------------\n@mixin position-horizontal($start: null, $end: null) {\n  @if $start == $end {\n    @include multi-dir() {\n      left: $start;\n      right: $end;\n    }\n  } @else {\n    @at-root {\n      & {\n        inset-inline-start: $start;\n        inset-inline-end: $end;\n      }\n    }\n  }\n}\n\n// Add position for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin position($top: null, $end: null, $bottom: null, $start: null) {\n  @include position-horizontal($start, $end);\n  top: $top;\n  bottom: $bottom;\n}\n\n// Add border for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin border($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(border, $top, $end, $bottom, $start);\n}\n\n// Add border radius for all directions\n// @param {string} $top-start\n// @param {string} $top-end\n// @param {string} $bottom-end\n// @param {string} $bottom-start\n// ----------------------------------------------------------\n@mixin border-radius($top-start, $top-end: $top-start, $bottom-end: $top-start, $bottom-start: $top-end) {\n  @if $top-start == $top-end and $top-start == $bottom-end and $top-start == $bottom-start {\n    border-radius: $top-start;\n  } @else {\n    border-start-start-radius: $top-start;\n    border-start-end-radius: $top-end;\n    border-end-end-radius: $bottom-end;\n    border-end-start-radius: $bottom-start;\n  }\n}\n\n// Add direction for all directions\n// @param {string} $dir - Direction on LTR\n@mixin direction($dir) {\n  $other-dir: null;\n\n  @if $dir == ltr {\n    $other-dir: rtl;\n  } @else {\n    $other-dir: ltr;\n  }\n\n  @include ltr() {\n    direction: $dir;\n  }\n  @include rtl() {\n    direction: $other-dir;\n  }\n}\n\n// Add float for all directions\n// @param {string} $side\n// @param {string} $decorator - !important\n@mixin float($side, $decorator: null) {\n  @if $side == start {\n    @include ltr() {\n      float: left $decorator;\n    }\n    @include rtl() {\n      float: right $decorator;\n    }\n  } @else if $side == end {\n    @include ltr() {\n      float: right $decorator;\n    }\n    @include rtl() {\n      float: left $decorator;\n    }\n  } @else {\n    @include multi-dir() {\n      float: $side $decorator;\n    }\n  }\n}\n\n@mixin background-position($horizontal, $horizontal-amount: null, $vertical: null, $vertical-amount: null) {\n  @if $horizontal == start or $horizontal == end {\n    $horizontal-ltr: null;\n    $horizontal-rtl: null;\n    @if $horizontal == start {\n      $horizontal-ltr: left;\n      $horizontal-rtl: right;\n    } @else {\n      $horizontal-ltr: right;\n      $horizontal-rtl: left;\n    }\n\n    @include ltr() {\n      background-position: $horizontal-ltr $horizontal-amount $vertical $vertical-amount;\n    }\n    @include rtl() {\n      background-position: $horizontal-rtl $horizontal-amount $vertical $vertical-amount;\n    }\n  } @else {\n    @include multi-dir() {\n      background-position: $horizontal $horizontal-amount $vertical $vertical-amount;\n    }\n  }\n}\n\n@mixin transform-origin($x-axis, $y-axis: null) {\n  @if $x-axis == start {\n    @include ltr() {\n      transform-origin: left $y-axis;\n    }\n    @include rtl() {\n      transform-origin: right $y-axis;\n    }\n  } @else if $x-axis == end {\n    @include ltr() {\n      transform-origin: right $y-axis;\n    }\n    @include rtl() {\n      transform-origin: left $y-axis;\n    }\n  } @else if $x-axis == left or $x-axis == right {\n    @include multi-dir() {\n      transform-origin: $x-axis $y-axis;\n    }\n  } @else {\n    @include ltr() {\n      transform-origin: $x-axis $y-axis;\n    }\n    @include rtl() {\n      transform-origin: calc(100% - #{$x-axis}) $y-axis;\n    }\n  }\n}\n\n// Add transform for all directions\n// @param {string} $transforms - comma separated list of transforms\n@mixin transform($transforms...) {\n  $extra: null;\n\n  $x: null;\n  $ltr-translate: null;\n  $rtl-translate: null;\n\n  @each $transform in $transforms {\n    @if (str-index($transform, translate3d)) {\n      $transform: str-replace($transform, 'translate3d(');\n      $transform: str-replace($transform, ')');\n\n      $coordinates: str-split($transform, ',');\n\n      $x: nth($coordinates, 1);\n      $y: nth($coordinates, 2);\n      $z: nth($coordinates, 3);\n\n      $ltr-translate: translate3d($x, $y, $z);\n      $rtl-translate: translate3d(calc(-1 * #{$x}), $y, $z);\n    } @else {\n      @if $extra == null {\n        $extra: $transform;\n      } @else {\n        $extra: $extra $transform;\n      }\n    }\n  }\n\n  @if $x == '0' or $x == null {\n    @include multi-dir() {\n      transform: $ltr-translate $extra;\n    }\n  } @else {\n    @include ltr() {\n      transform: $ltr-translate $extra;\n    }\n\n    @include rtl() {\n      transform: $rtl-translate $extra;\n    }\n  }\n}\n", "@import \"../themes/ionic.globals\";\n@import \"../themes/ionic.mixins\";\n\n// Text Transformation\n// --------------------------------------------------\n// Creates text transform attributes based on screen size\n\n@each $breakpoint in map-keys($screen-breakpoints) {\n  $infix: breakpoint-infix($breakpoint, $screen-breakpoints);\n\n  @include media-breakpoint-up($breakpoint, $screen-breakpoints) {\n    // Provide `.ion-text-{bp}` classes for transforming the text based\n    // on the breakpoint\n    .ion-text#{$infix}-uppercase {\n      /* stylelint-disable-next-line declaration-no-important */\n      text-transform: uppercase !important;\n    }\n\n    .ion-text#{$infix}-lowercase {\n      /* stylelint-disable-next-line declaration-no-important */\n      text-transform: lowercase !important;\n    }\n\n    .ion-text#{$infix}-capitalize {\n      /* stylelint-disable-next-line declaration-no-important */\n      text-transform: capitalize !important;\n    }\n  }\n}\n", "\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n@mixin tablet-viewport() {\n  @media screen and (min-width: 768px) {\n    @content;\n  }\n}\n\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n@mixin mobile-viewport() {\n  @media screen and (max-width: 767px) {\n    @content;\n  }\n}\n\n@mixin input-cover() {\n  @include position(0, null, null, 0);\n  @include margin(0);\n\n  position: absolute;\n\n  width: 100%;\n  height: 100%;\n\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n\n  appearance: none;\n  outline: none;\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n@mixin visually-hidden() {\n  position: absolute;\n\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  width: 100%;\n  height: 100%;\n\n  margin: 0;\n  padding: 0;\n\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n\n  opacity: 0;\n  overflow: hidden;\n\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n@mixin text-inherit() {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n}\n\n@mixin button-state() {\n  @include position(0, 0, 0, 0);\n\n  position: absolute;\n\n  content: \"\";\n\n  opacity: 0;\n}\n\n// Font smoothing\n// --------------------------------------------------\n\n@mixin font-smoothing() {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n// Get the key from a map based on the index\n@function index-to-key($map, $index) {\n  $keys: map-keys($map);\n\n  @return nth($keys, $index);\n}\n\n\n// Breakpoint Mixins\n// ---------------------------------------------------------------------------------\n\n// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$screen-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// ---------------------------------------------------------------------------------\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $screen-breakpoints) {\n  $min: map-get($breakpoints, $name);\n\n  @return if($name != index-to-key($breakpoints, 1), $min, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $screen-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $screen-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $screen-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Maximum breakpoint width. Null for the smallest (first) breakpoint.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n//\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\t// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\t// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $screen-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $screen-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n\n// Text Direction - ltr / rtl\n//\n// CSS defaults to use the ltr css, and adds [dir=rtl] selectors\n// to override ltr defaults.\n// ----------------------------------------------------------\n\n@mixin multi-dir() {\n  @content;\n\n  // $root: #{&};\n  // @at-root [dir] {\n  //   #{$root} {\n  //     @content;\n  //   }\n  // }\n}\n\n@mixin rtl() {\n  $root: #{&};\n\n  $rootSplit: str-split($root, \",\");\n  $selectors: #{add-root-selector($root, \"[dir=rtl]\")};\n  $selectorsSplit: str-split($selectors, \",\");\n\n  $hostContextSelectors: ();\n  $restSelectors: ();\n  $dirSelectors: ();\n\n  // Selectors must be split into individual selectors in case the browser\n  // doesn't support a specific selector.\n  // For example, Firefox and Safari doesn't support `:host-context()`.\n  // If an invalid selector is used, then the entire group of selectors\n  // will be ignored.\n  // @link https://www.w3.org/TR/selectors-3/#grouping\n  @each $selector in $selectorsSplit {\n    // Group the selectors back into a single selector to optimize the output.\n    @if str-index($selector, \":host-context\") {\n      $hostContextSelectors: append($hostContextSelectors, $selector, comma);\n    } @else {\n      // Group the selectors back into a single selector to optimize the output.\n      $restSelectors: append($restSelectors, $selector, comma);\n    }\n  }\n\n  // Supported by Chrome.\n  @if length($hostContextSelectors) > 0 {\n    @at-root #{$hostContextSelectors} {\n      @content;\n    }\n  }\n\n  // Supported by all browsers.\n  @if length($restSelectors) > 0 {\n    @at-root #{$restSelectors} {\n      @content;\n    }\n  }\n\n  // If browser can support `:dir()`, then add the `:dir()` selectors.\n  @supports selector(:dir(rtl)) {\n    // Adding :dir() in case the browser doesn't support `:host-context()` and does support `:dir()`.\n    // `:host-context()` is added:\n    // - through the `add-root-selector()` function.\n    // - first so that it takes precedence over `:dir()`.\n    // For example,\n    // - Firefox doesn't support `:host-context()`, but does support `:dir()`.\n    // - Safari doesn't support `:host-context()`, but Safari 16.4+ supports `:dir()`\n    // @link https://webkit.org/blog/13966/webkit-features-in-safari-16-4/\n    // -- However, there is a Webkit bug on v16 that prevents `:dir()` from working when\n    // -- the app direction is changed dynamically. v17+ works fine.\n    // -- @link https://bugs.webkit.org/show_bug.cgi?id=257133\n\n    // Supported by Firefox.\n    @at-root #{add-root-selector($root, \":dir(rtl)\", false)} {\n      @content;\n    }\n  }\n}\n\n@mixin ltr() {\n  @content;\n}\n\n\n// SVG Background Image Mixin\n// @param {string} $svg\n// ----------------------------------------------------------\n@mixin svg-background-image($svg, $flip-rtl: false) {\n  $url: url-encode($svg);\n  $viewBox: str-split(str-extract($svg, \"viewBox='\", \"'\"), \" \");\n\n  @if $flip-rtl != true or $viewBox == null {\n    @include multi-dir() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n  } @else {\n    $transform: \"transform='translate(#{nth($viewBox, 3)}, 0) scale(-1, 1)'\";\n    $flipped-url: $svg;\n    $flipped-url: str-replace($flipped-url, \"<path\", \"<path #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<line\", \"<line #{$transform}\");\n    $flipped-url: str-replace($flipped-url, \"<polygon\", \"<polygon #{$transform}\");\n    $flipped-url: url-encode($flipped-url);\n\n    @include ltr () {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$url}\");\n    }\n    @include rtl() {\n      background-image: url(\"data:image/svg+xml;charset=utf-8,#{$flipped-url}\");\n    }\n  }\n}\n\n// Add property horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin property-horizontal($prop, $start, $end: $start) {\n  @if $start == 0 and $end == 0 {\n    #{$prop}-left: $start;\n    #{$prop}-right: $end;\n\n  } @else {\n    -webkit-#{$prop}-start: $start;\n    #{$prop}-inline-start: $start;\n    -webkit-#{$prop}-end: $end;\n    #{$prop}-inline-end: $end;\n  }\n}\n\n// Add property for all directions\n// @param {string} $prop\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// @param {boolean} $content include content or use default\n// ----------------------------------------------------------\n@mixin property($prop, $top, $end: $top, $bottom: $top, $start: $end) {\n  @include property-horizontal($prop, $start, $end);\n  #{$prop}-top: $top;\n  #{$prop}-bottom: $bottom;\n}\n\n// Add padding horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin padding-horizontal($start, $end: $start) {\n  @include property-horizontal(padding, $start, $end);\n}\n\n// Add padding for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin padding($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(padding, $top, $end, $bottom, $start);\n}\n\n// Add margin horizontal\n// @param {string} $start\n// @param {string} $end\n// ----------------------------------------------------------\n@mixin margin-horizontal($start, $end: $start) {\n  @include property-horizontal(margin, $start, $end);\n}\n\n// Add margin for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin margin($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(margin, $top, $end, $bottom, $start);\n}\n\n// Add position horizontal\n// @param {string} $start - amount to position start\n// @param {string} $end - amount to left: 0; end\n// ----------------------------------------------------------\n@mixin position-horizontal($start: null, $end: null) {\n  @if $start == $end {\n    @include multi-dir() {\n      left: $start;\n      right: $end;\n    }\n  } @else {\n    @at-root {\n      & {\n        inset-inline-start: $start;\n        inset-inline-end: $end;\n      }\n    }\n  }\n}\n\n// Add position for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin position($top: null, $end: null, $bottom: null, $start: null) {\n  @include position-horizontal($start, $end);\n  top: $top;\n  bottom: $bottom;\n}\n\n// Add border for all directions\n// @param {string} $top\n// @param {string} $end\n// @param {string} $bottom\n// @param {string} $start\n// ----------------------------------------------------------\n@mixin border($top, $end: $top, $bottom: $top, $start: $end) {\n  @include property(border, $top, $end, $bottom, $start);\n}\n\n// Add border radius for all directions\n// @param {string} $top-start\n// @param {string} $top-end\n// @param {string} $bottom-end\n// @param {string} $bottom-start\n// ----------------------------------------------------------\n@mixin border-radius($top-start, $top-end: $top-start, $bottom-end: $top-start, $bottom-start: $top-end) {\n  @if $top-start == $top-end and $top-start == $bottom-end and $top-start == $bottom-start {\n    border-radius: $top-start;\n  } @else {\n    border-start-start-radius: $top-start;\n    border-start-end-radius: $top-end;\n    border-end-end-radius: $bottom-end;\n    border-end-start-radius: $bottom-start;\n  }\n}\n\n// Add direction for all directions\n// @param {string} $dir - Direction on LTR\n@mixin direction($dir) {\n  $other-dir: null;\n\n  @if $dir == ltr {\n    $other-dir: rtl;\n  } @else {\n    $other-dir: ltr;\n  }\n\n  @include ltr() {\n    direction: $dir;\n  }\n  @include rtl() {\n    direction: $other-dir;\n  }\n}\n\n// Add float for all directions\n// @param {string} $side\n// @param {string} $decorator - !important\n@mixin float($side, $decorator: null) {\n  @if $side == start {\n    @include ltr() {\n      float: left $decorator;\n    }\n    @include rtl() {\n      float: right $decorator;\n    }\n  } @else if $side == end {\n    @include ltr() {\n      float: right $decorator;\n    }\n    @include rtl() {\n      float: left $decorator;\n    }\n  } @else {\n    @include multi-dir() {\n      float: $side $decorator;\n    }\n  }\n}\n\n@mixin background-position($horizontal, $horizontal-amount: null, $vertical: null, $vertical-amount: null) {\n  @if $horizontal == start or $horizontal == end {\n    $horizontal-ltr: null;\n    $horizontal-rtl: null;\n    @if $horizontal == start {\n      $horizontal-ltr: left;\n      $horizontal-rtl: right;\n    } @else {\n      $horizontal-ltr: right;\n      $horizontal-rtl: left;\n    }\n\n    @include ltr() {\n      background-position: $horizontal-ltr $horizontal-amount $vertical $vertical-amount;\n    }\n    @include rtl() {\n      background-position: $horizontal-rtl $horizontal-amount $vertical $vertical-amount;\n    }\n  } @else {\n    @include multi-dir() {\n      background-position: $horizontal $horizontal-amount $vertical $vertical-amount;\n    }\n  }\n}\n\n@mixin transform-origin($x-axis, $y-axis: null) {\n  @if $x-axis == start {\n    @include ltr() {\n      transform-origin: left $y-axis;\n    }\n    @include rtl() {\n      transform-origin: right $y-axis;\n    }\n  } @else if $x-axis == end {\n    @include ltr() {\n      transform-origin: right $y-axis;\n    }\n    @include rtl() {\n      transform-origin: left $y-axis;\n    }\n  } @else if $x-axis == left or $x-axis == right {\n    @include multi-dir() {\n      transform-origin: $x-axis $y-axis;\n    }\n  } @else {\n    @include ltr() {\n      transform-origin: $x-axis $y-axis;\n    }\n    @include rtl() {\n      transform-origin: calc(100% - #{$x-axis}) $y-axis;\n    }\n  }\n}\n\n// Add transform for all directions\n// @param {string} $transforms - comma separated list of transforms\n@mixin transform($transforms...) {\n  $extra: null;\n\n  $x: null;\n  $ltr-translate: null;\n  $rtl-translate: null;\n\n  @each $transform in $transforms {\n    @if (str-index($transform, translate3d)) {\n      $transform: str-replace($transform, 'translate3d(');\n      $transform: str-replace($transform, ')');\n\n      $coordinates: str-split($transform, ',');\n\n      $x: nth($coordinates, 1);\n      $y: nth($coordinates, 2);\n      $z: nth($coordinates, 3);\n\n      $ltr-translate: translate3d($x, $y, $z);\n      $rtl-translate: translate3d(calc(-1 * #{$x}), $y, $z);\n    } @else {\n      @if $extra == null {\n        $extra: $transform;\n      } @else {\n        $extra: $extra $transform;\n      }\n    }\n  }\n\n  @if $x == '0' or $x == null {\n    @include multi-dir() {\n      transform: $ltr-translate $extra;\n    }\n  } @else {\n    @include ltr() {\n      transform: $ltr-translate $extra;\n    }\n\n    @include rtl() {\n      transform: $rtl-translate $extra;\n    }\n  }\n}\n", "// Flex Utilities\n// --------------------------------------------------\n// Creates flex classes to align flex containers\n// and items\n\n// Align Self\n// --------------------------------------------------\n\n.ion-align-self-start {\n  align-self: flex-start !important;\n}\n\n.ion-align-self-end {\n  align-self: flex-end !important;\n}\n\n.ion-align-self-center {\n  align-self: center !important;\n}\n\n.ion-align-self-stretch {\n  align-self: stretch !important;\n}\n\n.ion-align-self-baseline {\n  align-self: baseline !important;\n}\n\n.ion-align-self-auto {\n  align-self: auto !important;\n}\n\n\n// Flex Wrap\n// --------------------------------------------------\n\n.ion-wrap {\n  flex-wrap: wrap !important;\n}\n\n.ion-nowrap {\n  flex-wrap: nowrap !important;\n}\n\n.ion-wrap-reverse {\n  flex-wrap: wrap-reverse !important;\n}\n\n\n// Justify Content\n// --------------------------------------------------\n\n.ion-justify-content-start {\n  justify-content: flex-start !important;\n}\n\n.ion-justify-content-center {\n  justify-content: center !important;\n}\n\n.ion-justify-content-end {\n  justify-content: flex-end !important;\n}\n\n.ion-justify-content-around {\n  justify-content: space-around !important;\n}\n\n.ion-justify-content-between {\n  justify-content: space-between !important;\n}\n\n.ion-justify-content-evenly {\n  justify-content: space-evenly !important;\n}\n\n\n// Align Items\n// --------------------------------------------------\n\n.ion-align-items-start {\n  align-items: flex-start !important;\n}\n\n.ion-align-items-center {\n  align-items: center !important;\n}\n\n.ion-align-items-end {\n  align-items: flex-end !important;\n}\n\n.ion-align-items-stretch {\n  align-items: stretch !important;\n}\n\n.ion-align-items-baseline {\n  align-items: baseline !important;\n}\n", "@import \"./dark\";\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    @include dark-base-palette();\n  }\n\n  :root.ios {\n    @include dark-ios-palette();\n  }\n\n  :root.md {\n    @include dark-md-palette();\n  }\n}\n", "@use \"sass:map\";\n@import \"../../themes/ionic.functions.color\";\n\n$primary: #4d8dff;\n$secondary: #46b1ff;\n$tertiary: #8482fb;\n$success: #2dd55b;\n$warning: #ffce31;\n$danger: #f24c58;\n$light: #222428;\n$medium: #989aa2;\n$dark: #f4f5f8;\n\n$colors:  (\n  primary: (\n    base:             $primary,\n    contrast:         #000,\n    shade:            get-color-shade($primary),\n    tint:             get-color-tint($primary)\n  ),\n  secondary: (\n    base:             $secondary,\n    contrast:         #000,\n    shade:            get-color-shade($secondary),\n    tint:             get-color-tint($secondary)\n  ),\n  tertiary: (\n    base:             $tertiary,\n    contrast:         #000,\n    shade:            get-color-shade($tertiary),\n    tint:             get-color-tint($tertiary)\n  ),\n  success: (\n    base:             $success,\n    contrast:         #000,\n    shade:            get-color-shade($success),\n    tint:             get-color-tint($success)\n  ),\n  warning: (\n    base:             $warning,\n    contrast:         #000,\n    shade:            get-color-shade($warning),\n    tint:             get-color-tint($warning)\n  ),\n  danger: (\n    base:             $danger,\n    contrast:         #000,\n    shade:            get-color-shade($danger),\n    tint:             get-color-tint($danger)\n  ),\n  light: (\n    base:             $light,\n    contrast:         #fff,\n    shade:            get-color-shade($light),\n    tint:             get-color-tint($light)\n  ),\n  medium: (\n    base:             $medium,\n    contrast:         #000,\n    shade:            get-color-shade($medium),\n    tint:             get-color-tint($medium)\n  ),\n  dark: (\n    base:             $dark,\n    contrast:         #000,\n    shade:            get-color-shade($dark),\n    tint:             get-color-tint($dark)\n  )\n);\n\n@mixin dark-base-palette() {\n  & {\n    @each $color-name, $value in $colors {\n      --ion-color-#{$color-name}: #{map.get($value, base)};\n      --ion-color-#{$color-name}-rgb: #{color-to-rgb-list(map.get($value, base))};\n      --ion-color-#{$color-name}-contrast: #{map.get($value, contrast)};\n      --ion-color-#{$color-name}-contrast-rgb: #{color-to-rgb-list(map.get($value, contrast))};\n      --ion-color-#{$color-name}-shade: #{map.get($value, shade)};\n      --ion-color-#{$color-name}-tint: #{map.get($value, tint)};\n    }\n  }\n}\n\n@mixin dark-ios-palette() {\n  & {\n    --ion-background-color: #000000;\n    --ion-background-color-rgb: 0, 0, 0;\n    --ion-text-color: #ffffff;\n    --ion-text-color-rgb: 255, 255, 255;\n    --ion-background-color-step-50: #0d0d0d;\n    --ion-background-color-step-100: #1a1a1a;\n    --ion-background-color-step-150: #262626;\n    --ion-background-color-step-200: #333333;\n    --ion-background-color-step-250: #404040;\n    --ion-background-color-step-300: #4d4d4d;\n    --ion-background-color-step-350: #595959;\n    --ion-background-color-step-400: #666666;\n    --ion-background-color-step-450: #737373;\n    --ion-background-color-step-500: #808080;\n    --ion-background-color-step-550: #8c8c8c;\n    --ion-background-color-step-600: #999999;\n    --ion-background-color-step-650: #a6a6a6;\n    --ion-background-color-step-700: #b3b3b3;\n    --ion-background-color-step-750: #bfbfbf;\n    --ion-background-color-step-800: #cccccc;\n    --ion-background-color-step-850: #d9d9d9;\n    --ion-background-color-step-900: #e6e6e6;\n    --ion-background-color-step-950: #f2f2f2;\n    --ion-text-color-step-50: #f2f2f2;\n    --ion-text-color-step-100: #e6e6e6;\n    --ion-text-color-step-150: #d9d9d9;\n    --ion-text-color-step-200: #cccccc;\n    --ion-text-color-step-250: #bfbfbf;\n    --ion-text-color-step-300: #b3b3b3;\n    --ion-text-color-step-350: #a6a6a6;\n    --ion-text-color-step-400: #999999;\n    --ion-text-color-step-450: #8c8c8c;\n    --ion-text-color-step-500: #808080;\n    --ion-text-color-step-550: #737373;\n    --ion-text-color-step-600: #666666;\n    --ion-text-color-step-650: #595959;\n    --ion-text-color-step-700: #4d4d4d;\n    --ion-text-color-step-750: #404040;\n    --ion-text-color-step-800: #333333;\n    --ion-text-color-step-850: #262626;\n    --ion-text-color-step-900: #1a1a1a;\n    --ion-text-color-step-950: #0d0d0d;\n    --ion-item-background: #000000;\n    --ion-card-background: #1c1c1d;\n  }\n\n  & ion-modal {\n    --ion-background-color: var(--ion-color-step-100, var(--ion-background-color-step-100));\n    --ion-toolbar-background: var(--ion-color-step-150, var(--ion-background-color-step-150));\n    --ion-toolbar-border-color: var(--ion-color-step-250, var(--ion-background-color-step-250));\n  }\n}\n\n@mixin dark-md-palette() {\n  & {\n    --ion-background-color: #121212;\n    --ion-background-color-rgb: 18, 18, 18;\n    --ion-text-color: #ffffff;\n    --ion-text-color-rgb: 255, 255, 255;\n    --ion-background-color-step-50: #1e1e1e;\n    --ion-background-color-step-100: #2a2a2a;\n    --ion-background-color-step-150: #363636;\n    --ion-background-color-step-200: #414141;\n    --ion-background-color-step-250: #4d4d4d;\n    --ion-background-color-step-300: #595959;\n    --ion-background-color-step-350: #656565;\n    --ion-background-color-step-400: #717171;\n    --ion-background-color-step-450: #7d7d7d;\n    --ion-background-color-step-500: #898989;\n    --ion-background-color-step-550: #949494;\n    --ion-background-color-step-600: #a0a0a0;\n    --ion-background-color-step-650: #acacac;\n    --ion-background-color-step-700: #b8b8b8;\n    --ion-background-color-step-750: #c4c4c4;\n    --ion-background-color-step-800: #d0d0d0;\n    --ion-background-color-step-850: #dbdbdb;\n    --ion-background-color-step-900: #e7e7e7;\n    --ion-background-color-step-950: #f3f3f3;\n    --ion-text-color-step-50: #f3f3f3;\n    --ion-text-color-step-100: #e7e7e7;\n    --ion-text-color-step-150: #dbdbdb;\n    --ion-text-color-step-200: #d0d0d0;\n    --ion-text-color-step-250: #c4c4c4;\n    --ion-text-color-step-300: #b8b8b8;\n    --ion-text-color-step-350: #acacac;\n    --ion-text-color-step-400: #a0a0a0;\n    --ion-text-color-step-450: #949494;\n    --ion-text-color-step-500: #898989;\n    --ion-text-color-step-550: #7d7d7d;\n    --ion-text-color-step-600: #717171;\n    --ion-text-color-step-650: #656565;\n    --ion-text-color-step-700: #595959;\n    --ion-text-color-step-750: #4d4d4d;\n    --ion-text-color-step-800: #414141;\n    --ion-text-color-step-850: #363636;\n    --ion-text-color-step-900: #2a2a2a;\n    --ion-text-color-step-950: #1e1e1e;\n    --ion-item-background: #1e1e1e;\n    --ion-toolbar-background: #1f1f1f;\n    --ion-tab-bar-background: #1f1f1f;\n    --ion-card-background: #1e1e1e;\n  }\n}\n", "/**\n * Ionic Dark Theme\n * -----------------------------------------------------\n * For more info, please see:\n * https://ionicframework.com/docs/theming/dark-mode\n */\n\n/* @import \"@ionic/angular/css/palettes/dark.always.css\"; */\n/* @import \"@ionic/angular/css/palettes/dark.class.css\"; */\n@import \"@ionic/angular/css/palettes/dark.system.css\";\n\n\n:root {\n  --ion-color-warning: #d4a017;\n  --ion-color-warning-rgb: 212, 160, 23;\n  --ion-color-warning-contrast: #ffffff;\n  --ion-color-warning-contrast-rgb: 255, 255, 255;\n  --ion-color-warning-shade: #bb8e13;\n  --ion-color-warning-tint: #d9ad2d;\n}\n"],
  "mappings": "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",
  "names": []
}
